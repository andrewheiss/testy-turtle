---
title: "H~1~: Effect of anti-NGO crackdown on total ODA"
format:
  html:
    code-fold: true
    toc-depth: 5
    knitr:
      opts_chunk:
        out.width: "80%"
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
options(digits = 3, width = 120,
        dplyr.summarise.inform = FALSE,
        knitr.kable.NA = "")
```

```{scss, echo=FALSE}
// kableExtra or modelsummary or Quarto or *something* injects `border-bottom: 0` 
// into the inline <table style=XXX> for modelsummary tables when there are notes 
// with multiple lines (most esoteric bug ever!). This nukes the light grey bottom 
// border color that Bootstrap uses, which makes the tables ugly. So this class 
// forces the light grey border back on.
.light-border {
  border-bottom-color: var(--bs-gray-300) !important;
}
```

```{r load-libraries-data, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
library(brms)
library(tidybayes)
library(broom)
library(broom.mixed)
library(modelsummary)
library(marginaleffects)
library(patchwork)
library(scales)
library(ggtext)
library(kableExtra)
library(here)

set.seed(1234)

# Load stuff from targets
# Plotting functions
invisible(list2env(tar_read(graphic_functions), .GlobalEnv))

# Tell bayesplot to use the sunset palette for things like pp_check()
bayesplot::color_scheme_set(clrs$Sunset[2:7])

# Data
df_country_aid <- tar_read(country_aid_final)
df_country_aid_laws <- filter(df_country_aid, laws)

# Treatment models
tar_load(c(m_oda_treatment_total, m_oda_treatment_advocacy, 
           m_oda_treatment_entry, m_oda_treatment_funding, 
           m_oda_treatment_ccsi))

# IPTW data
tar_load(c(df_oda_iptw_total, df_oda_iptw_advocacy, 
           df_oda_iptw_entry, df_oda_iptw_funding,
           df_oda_iptw_ccsi))

# Outcome models
tar_load(c(m_oda_outcome_total, m_oda_outcome_advocacy, 
           m_oda_outcome_entry, m_oda_outcome_funding,
           m_oda_outcome_ccsi))

# Results tables
tar_load(c(models_tbl_h1_treatment_num, models_tbl_h1_treatment_denom))
tar_load(c(models_tbl_h1_outcome_dejure, models_tbl_h1_outcome_defacto))
```

```{r modelsummary-settings}
gofs <- tribble(
  ~raw,          ~clean,     ~fmt, ~omit,
  "nobs",        "N",        0,    FALSE,
  "r.squared",   "\\(R^2\\) (total)",    2,    FALSE,
  "r2.marginal", "\\(R^2\\) (marginal)", 2, FALSE
)

coefs_num <- list(
  "b_barriers_total_lag1" = "Treatment (t − 1)",
  "b_barriers_total_lag2_cumsum" = "Treatment history",
  "b_advocacy_lag1" = "Treatment (t − 1)",
  "b_advocacy_lag2_cumsum" = "Treatment history",
  "b_entry_lag1" = "Treatment (t − 1)",
  "b_entry_lag2_cumsum" = "Treatment history",
  "b_funding_lag1" = "Treatment (t − 1)",
  "b_funding_lag2_cumsum" = "Treatment history",
  "b_v2xcs_ccsi_lag1" = "Treatment (t − 1)",
  "b_v2xcs_ccsi_lag2_cumsum" = "Treatment history",
  "b_Intercept" = "Intercept",
  "sd_gwcode__Intercept" = "Between-country variability (\\(\\sigma_0\\) for \\(b_0\\) offsets)",
  "sigma" = "Model variability (\\(\\sigma_y\\))"
)

coefs_denom <- list(
  "b_barriers_total_lag1" = "Treatment (t − 1)",
  "b_barriers_total_lag2_cumsum" = "Treatment history",
  "b_advocacy_lag1" = "Treatment (t − 1)",
  "b_advocacy_lag2_cumsum" = "Treatment history",
  "b_entry_lag1" = "Treatment (t − 1)",
  "b_entry_lag2_cumsum" = "Treatment history",
  "b_funding_lag1" = "Treatment (t − 1)",
  "b_funding_lag2_cumsum" = "Treatment history",
  "b_v2xcs_ccsi_lag1" = "Treatment (t − 1)",
  "b_v2xcs_ccsi_lag2_cumsum" = "Treatment history",
  "b_total_oda_z_lag1" = "Total ODA (standardized; t − 1)",
  "b_v2x_polyarchy" = "Polyarchy",
  "b_v2x_corr" = "Corruption index",
  "b_v2x_rule" = "Rule of law index",
  "b_v2x_civlib" = "Civil liberties index",
  "b_v2x_clphy" = "Physical violence index",
  "b_v2x_clpriv" = "Private civil liberties index",
  "b_gdpcap_log_z" = "Log GDP/capita (standardized)",
  "b_un_trade_pct_gdp" = "Percent of GDP from trade",
  "b_v2peedueq" = "Educational equality index",
  "b_v2pehealth" = "Health equality index",
  "b_e_peinfmor" = "Infant mortality rate",
  "b_internal_conflict_past_5TRUE" = "Internal conflict in past 5 years",
  "b_natural_dis_count" = "Count of natural disasters",
  "b_Intercept" = "Intercept",
  "b_year_c" = "Year trend",
  "sd_gwcode__Intercept" = "Between-country intercept variability (\\(\\sigma_0\\) for \\(b_0\\) offsets)",
  "sd_gwcode__year_c" = "Between-country year variability (\\(\\sigma_1\\) for \\(b_1\\) offsets)",
  "cor_gwcode__Intercept__year_c" = "Correlation between random intercepts and slopes (\\(\\rho\\))",
  "sigma" = "Model variability (\\(\\sigma_y\\))"
)

treatment_names <- c("Treatment", "Total barriers (t)", "Barriers to advocacy (t)", 
                     "Barriers to entry (t)", "Barriers to funding (t)", "CCSI (t)")
treatment_rows <- as.data.frame(t(treatment_names))
attr(treatment_rows, "position") <- 1
```


## Weight models

### General idea

To create stabilized inverse probability of treatment weights (IPTW) for a continuous treatment, we calculate the ratio of two distributions:

- The numerator is the probability distribution $\phi$ of treatment $X_{it}$, given lagged treatment $X_{i, t-1}$, treatment history $\sum_{\tau = (t-2)}^{t} X_{i\tau}$, and non-time-varying confounders $Z_i$

- The denominator is the probability distribution $\phi$ of treatment $X_{it}$, given lagged treatment $X_{i, t-1}$, treatment history $\sum_{\tau = (t-2)}^{t} X_{i\tau}$, lagged outcome $Y_{i, t-1}$, time-varying confounders $Z_{it}$, and non-time-varying confounders $Z_i$

We then calculate the cumulative product of this ratio for each year within each country:

$$
\text{Stabilized weights} = \prod^t_{t = 1} 
\frac{\phi \left(X_{it} \mid X_{i, t-1}, \left[\sum_{\tau = (t-2)}^{t} X_{i\tau}\right], Z_i \right)}
{\phi \left(X_{it} \mid X_{i, t-1}, \left[\sum_{\tau = (t-2)}^{t} X_{i\tau}\right], Y_{i, t-1}, Z_{it}, Z_i \right)}
$$

In general code, here's what that process looks like:

```{r fake-weight-process, eval=FALSE}
#| code-fold: show
# We don't actually use lm() in the project; this is just a general illustration
# of the idea of building the weights
model_num <- lm(treatment ~ treatment_lag1 + treatment_lag2_cumsum + 
                  confounders_no_time)

distribution_num <- dnorm(data$treatment, 
                          mean = predict(model_num),
                          sd = sd(residuals(model_num)))

model_denom <- lm(treatment ~ treatment_lag1 + treatment_lag2_cumsum + 
                    outcome_lag1 + confounders_time_varying + counfounders_no_time)

distribution_denom <- dnorm(data$treatment, 
                            mean = predict(model_denom),
                            sd = sd(residuals(model_denom)))

data <- data %>% 
  mutate(weights_ratio = distribution_num / distribution_denom) %>% 
  group_by(gwcode) %>% 
  mutate(iptw = cumprod(weights_ratio)) %>% 
  ungroup()
```


### Actual models

We identify our time-varying and time-invariant confounders based on [our causal model and *do*-calculus logic](causal-model.qmd#final-variables-to-use), and we deal with the panel structure of the data by including random intercepts for country, and both a population-level trend and random slopes for year. We use [generic weakly informative priors](https://mc-stan.org/users/documentation/case-studies/weakly_informative_shapes.html) for our model parameters.

#### Numerator

Our numerator models look like this (but with the actual treatment variable replacing `treatment`, like `barriers_total`, `advocacy`, and so on):

```{r fake-numerator, eval=FALSE}
#| code-fold: show
bf(treatment ~ treatment_lag1 + treatment_lag2_cumsum + (1 | gwcode))
```

Or more formally:

$$
\begin{aligned}
\text{Treatment}_{it_j} &\sim \mathcal{N}(\mu_{it_j}, \sigma_y) \\
\mu_{it_j} &= (\beta_0 + b_{0_j}) + \beta_1 \text{Treatment}_{i, t-1_j} + \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} \\
b_{0_j} &\sim \mathcal{N}(0, \sigma_0) \\
\\
\beta_0, \beta_1 &\sim \operatorname{Student~\textit{t}\,}(\nu = 3, \mu = 0, \sigma = 1.5) \\
\sigma_y, \sigma_0 &\sim \operatorname{Exponential}(1)
\end{aligned}
$$

#### Denominator

Our denominator models look like this (but again with the actual treatment variable replacing `treatment`):

```{r fake-denominator, eval=FALSE}
#| code-fold: show
bf(treatment ~ treatment_lag1 + treatment_lag2_cumsum + 
     # Lagged outcome
     total_oda_z_lag1 +
     # Human rights and politics
     v2x_polyarchy + v2x_corr + v2x_rule + v2x_civlib + v2x_clphy + v2x_clpriv +
     # Economics and development
     gdpcap_log_z + un_trade_pct_gdp + v2peedueq + v2pehealth + e_peinfmor +
     # Conflict and disasters
     internal_conflict_past_5 + natural_dis_count +
     # Time and country effects
     year_c + (1 + year_c | gwcode))
```

Or more formally:

$$
\begin{aligned}
\text{Treatment}_{it_j} \sim&\ \mathcal{N}(\mu_{it_j}, \sigma_y) \\
\mu_{it_j} =&\ (\beta_0 + b_{0_j}) + \beta_1\, \text{Treatment}_{i, t-1_j} + \beta_2\, \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} + \\
&\ \beta_3\, \text{Total ODA}_{i,t-1_j} + \beta_{4 \ldots 9}\, \text{Human rights \& politics}_{it_j} + \\
&\ \beta_{10 \ldots 14}\, \text{Economics \& development} + \beta_{15, 16}\, \text{Conflict \& disasters}_{it_j} + \\
&\ (\beta_{17} + b_{17_j})\, \text{Year}_{it_j} \\
\left(
  \begin{array}{c} 
  b_{0_j} \\
  b_{17_j}
  \end{array}
\right) 
\sim&\ \text{MV}\,\mathcal{N}
\left[
  \left(
    \begin{array}{c}
    0 \\
    0 \\
    \end{array}
  \right)
  , \,
  \left(
  \begin{array}{cc}
     \sigma^2_{0} & \rho_{0, 17}\, \sigma_{0} \sigma_{17} \\ 
     \cdots & \sigma^2_{17}
  \end{array}
\right)
\right] \\
\\
\beta_0 \ldots \beta_{17} \sim&\ \operatorname{Student~\textit{t}\,}(\nu = 3, \mu = 0, \sigma = 1.5) \\
\sigma_y, \sigma_0, \sigma_{17} \sim&\ \operatorname{Exponential}(1) \\
\rho \sim&\ \operatorname{LKJ}(2)
\end{aligned}
$$

### Check weight models

Just to make sure everything converged nicely, we check some diagnostics for the weight models for the total barriers treatment. All the other models look basically the same as this—everything's fine.

#### Numerator

::: {.panel-tabset}

##### Trace plots

```{r plot-num-trace, warning=FALSE}
#| out-width: 80%
m_oda_treatment_total$model_num %>% 
  gather_draws(`^b_.*|^sd_.*|^sigma`, regex = TRUE) %>% 
  ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
  geom_line(linewidth = 0.1) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors()
```

##### Trank plots

```{r plot-num-trank, warning=FALSE}
#| out-width: 80%
m_oda_treatment_total$model_num %>% 
  gather_draws(`^b_.*|^sd_.*|^sigma`, regex = TRUE) %>% 
  group_by(.variable) %>% 
  mutate(draw_rank = rank(.value)) %>% 
  ggplot(aes(x = draw_rank, color = factor(.chain))) +
  stat_bin(geom = "step", binwidth = 500, position = position_identity(), boundary = 0) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())
```

##### Posterior predictive check

```{r plot-num-ppcheck}
#| out-width: 80%
withr::with_seed(1234, {
  pp_check(m_oda_treatment_total$model_num, ndraws = 20) +
    labs(x = "Total NGO barriers",
         title = "Numerator model") +
    theme_donors()
})
```

:::

#### Denominator

::: {.panel-tabset}

##### Trace plots

```{r plot-denom-trace, warning=FALSE, fig.width=10, fig.height=7}
#| out-width: 100%
m_oda_treatment_total$model_denom %>% 
  gather_draws(`^b_.*|^sd_.*|^cor_.*|^sigma`, regex = TRUE) %>% 
  ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
  geom_line(linewidth = 0.1) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors()
```

##### Trank plots

```{r plot-denom-trank, warning=FALSE, fig.width=10, fig.height=7}
#| out-width: 100%
m_oda_treatment_total$model_denom %>% 
  gather_draws(`^b_.*|^sd_.*|^cor_.*|^sigma`, regex = TRUE) %>% 
  group_by(.variable) %>% 
  mutate(draw_rank = rank(.value)) %>% 
  ggplot(aes(x = draw_rank, color = factor(.chain))) +
  stat_bin(geom = "step", binwidth = 500, position = position_identity(), boundary = 0) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())
```

##### Posterior predictive check

```{r plot-denom-ppcheck}
#| out-width: 80%
withr::with_seed(1234, {
  pp_check(m_oda_treatment_total$model_denom, ndraws = 20) +
    labs(x = "Total NGO barriers",
         title = "Denominator model") +
    theme_donors()
})
```

:::


### Check weights

IPTWs should generally have a mean of 1 and shouldn't be too incredibly high. When they're big, it's a good idea to truncate them at some reasonable level.

::: {.panel-tabset}
#### Total ODA

The max weight here is `r round(max(df_oda_iptw_total$iptw), 0)`, but there are only a handful of observations with weights that high. The average is `r round(mean(df_oda_iptw_total$iptw), 2)` and the median is `r round(median(df_oda_iptw_total$iptw), 2)`, which are both close to 1, so we're good.

```{r iptws-total-oda}
#| code-fold: show
summary(df_oda_iptw_total$iptw)
```

```{r plot-iptws-total-oda}
df_oda_iptw_total %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### Advocacy

The max weight here is `r round(max(df_oda_iptw_advocacy$iptw), 0)` which is lovely. The average is `r round(mean(df_oda_iptw_advocacy$iptw), 2)`, so we're good.

```{r iptws-advocacy}
#| code-fold: show
summary(df_oda_iptw_advocacy$iptw)
```

```{r plot-iptws-advocacy}
df_oda_iptw_advocacy %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### Entry

The max weight here is `r round(max(df_oda_iptw_entry$iptw), 0)` which is grand. The average is `r round(mean(df_oda_iptw_entry$iptw), 2)`, so we're golden.

```{r iptws-entry}
#| code-fold: show
summary(df_oda_iptw_entry$iptw)
```

```{r plot-iptws-entry}
df_oda_iptw_entry %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### Funding

The max weight here is `r round(max(df_oda_iptw_funding$iptw), 0)` which is fine. The average is `r round(mean(df_oda_iptw_funding$iptw), 2)`, so all is well.

```{r iptws-funding}
#| code-fold: show
summary(df_oda_iptw_funding$iptw)
```

```{r plot-iptws-funding}
df_oda_iptw_funding %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### Core civil society index

lol these blow up. The max weight is `r label_comma()(max(df_oda_iptw_ccsi$iptw))`, which, oh no.

```{r iptws-ccsi}
#| code-fold: show
summary(df_oda_iptw_ccsi$iptw)
```

There aren't a lot of observations with weights that high though. Check out the counts of rows with weights greater than 50 and greater than 500—only 100ish:

```{r show-threshold-counts-iptws-ccsi}
#| code-fold: show
df_oda_iptw_ccsi %>% count(iptw >= 50)
df_oda_iptw_ccsi %>% count(iptw >= 500)
```

We truncate these weights at 50. For robustness checks, we also truncate at 500, but (1) those models take *substantially* longer to run, and (2) the results are roughly the same.

```{r plot-iptws-ccsi}
plot_iptw_ccsi <- bind_rows(
  df_oda_iptw_ccsi %>% mutate(threshold = 50, iptw = ifelse(iptw > threshold, threshold, iptw)),
  df_oda_iptw_ccsi %>% mutate(threshold = 500, iptw = ifelse(iptw > threshold, threshold, iptw))
) %>% 
  mutate(threshold = paste0("Truncated at ", threshold),
         threshold = fct_inorder(threshold))

plot_iptw_ccsi %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap(vars(threshold), scales = "free_x") +
  theme_donors()
```
:::


### Results

These are less important since we just use these treatment models to generate weights *and* because interpreting each coefficient when trying to isolate causal effects is unimportant [@WestreichGreenland:2013; @KeeleStevensonElwert:2020].

::: {.panel-tabset}

#### Numerator

```{r tbl-h1-num, warning=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h1_treatment_num <- models_tbl_h1_treatment_num %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h1_treatment_num,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_num,
             gof_map = gofs,
             output = "kableExtra",
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2)) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

#### Denominator

```{r tbl-h1-denom, warning=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h1_treatment_denom <- models_tbl_h1_treatment_denom %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h1_treatment_denom,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_denom,
             gof_map = gofs,
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2),
             notes = notes) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

:::

## Outcome models

### Formal model

### MCMC diagnostics

### Analyzing the posterior

#### Within- and between-country variability

::: {.panel-tabset group="outcome"}
##### Total ODA

##### Advocacy

##### Entry

##### Funding

##### Core civil society index

:::

#### Hurdled vs. non-hurdled

TODO: Show three panels

::: {.panel-tabset group="outcome"}
##### Total ODA

##### Advocacy

##### Entry

##### Funding

##### Core civil society index

:::

#### Global analysis

##### Conditional effects

::: {.panel-tabset group="outcome"}
##### Total ODA

##### Advocacy

##### Entry

##### Funding

##### Core civil society index

:::

##### Marginal effects

::: {.panel-tabset group="outcome"}
##### Total ODA

##### Advocacy

##### Entry

##### Funding

##### Core civil society index

:::
