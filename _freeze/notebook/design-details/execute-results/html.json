{
  "hash": "bcaf041e1296254e4323f06e5fdc024c",
  "result": {
    "markdown": "---\ntitle: \"Fonts, colors, and other design details\"\nauthor: \"Suparna Chaudhry and Andrew Heiss\"\ndate: 2022-12-01\ndate-modified: \"2022-12-07\"\nresources: \n  - \"html/linux-libertine-woff/*\"\nformat: \n  html: \n    toc-depth: 4\n---\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(targets)\nlibrary(scales)\n\n# Load graphics functions from targets\ninvisible(list2env(tar_read(graphic_functions), .GlobalEnv))\n\nshow_nice_pal <- function(pal, nrow = 1, show_text = TRUE) {\n  out <- tibble(x = 1:length(pal),\n                color = pal) %>% \n    mutate(x_nice = glue::glue(\"[{x}]\")) %>% \n    mutate(across(c(color, x_nice), ~fct_inorder(.))) %>% \n    ggplot(aes(x = color, y = 1, fill = color)) +\n    geom_tile() +\n    scale_x_discrete(expand = c(0, 0)) +\n    scale_fill_identity() +\n    facet_wrap(vars(x_nice), scales = \"free_x\", nrow = nrow) +\n    theme_void(base_family = \"Inconsolata\") +\n    theme(panel.spacing.x = unit(-1, units = \"pt\"),\n          panel.spacing.y = unit(-0.5, units = \"lines\"),\n          strip.text = element_blank())\n  \n  if (show_text) {\n    out <- out + \n      theme(axis.text.x = element_text(margin = margin(b = 5)),\n            strip.text = element_text(size = rel(1.1), margin = margin(t = 5)),\n            panel.spacing.y = unit(0, units = \"lines\"))\n  }\n  \n  return(out)\n}\n```\n:::\n\n\n# Fonts\n\n\n::: {.cell layout-align=\"center\"}\n<style type=\"text/css\">\n@import url('https://fonts.googleapis.com/css2?family=Inter&display=swap');\n\n@font-face {\n  font-family: 'Linux Libertine O';\n  font-style: normal;\n  font-weight: normal;\n  src: local('Linux Libertine O Regular'), url('/notebook/html/linux-libertine-woff/LinLibertine_R.woff') format('woff');\n}\n\n@font-face {\n  font-family: 'Linux Libertine O';\n  font-style: italic;\n  font-weight: normal;\n  src: local('Linux Libertine O Italic'), url('/notebook/html/linux-libertine-woff/LinLibertine_RI.woff') format('woff');\n}\n\n@font-face {\n  font-family: 'Linux Libertine O';\n  font-style: normal;\n  font-weight: bold;\n  src: local('Linux Libertine O Bold'), url('/notebook/html/linux-libertine-woff/LinLibertine_RB.woff') format('woff');\n}\n\n@font-face {\n  font-family: 'Linux Libertine O Bold';\n  font-style: italic;\n  font-weight: bold;\n  src: local('Linux Libertine O Bold Italic'), url('LinLibertine_RBI.woff') format('woff');\n}\n\n.font-example {\n  background: #ffffff;\n  padding: 1.5em 1.5em 0.75em 1.5em;\n  margin-bottom: 1rem;\n  border-left: 10px solid #68abb8;\n  border-top: 1px solid #68abb8;\n  border-right: 1px solid #68abb8;\n  border-bottom: 1px solid #68abb8;\n  font-size: 1.1em;\n}\n\n.inter {\n  font-family: \"Inter\";\n}\n\n.libertine {\n  font-family: \"Linux Libertine O Regular\";\n  font-size: 1.2em;\n}\n</style>\n:::\n\n\nWe use [Inter](https://rsms.me/inter/) (accessible for free from [Google Fonts](https://fonts.google.com/specimen/Inter)) as the main font in all our plots. \n\n::: {.font-example .inter}\n**Inter**\n\nWhereas recognition of the *inherent dignity* and of the ***equal and inalienable*** rights of all members of the human family is the foundation of freedom, justice and peace in the world…\n:::\n\nIn the fancy preprint version of our manuscript we use [Linux Libertine](https://en.wikipedia.org/wiki/Linux_Libertine) for the main body font, since it fits with [Libertinus Math](https://github.com/alerque/libertinus) for fancier math typesetting.\n\n::: {.font-example .libertine}\n**Linux Libertine**\n\nWhereas recognition of the *inherent dignity* and of the ***equal and inalienable*** rights of all members of the human family is the foundation of freedom, justice and peace in the world…\n:::\n\n# Colors\n\n## Prism (`clrs$Prism`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-prism-short-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\nOur main palette is the [qualitative Prism palette from CARTOColors](https://carto.com/carto-colors/). CARTOColors palettes were designed for data-focused map visualizations,but can be used in any kind of visualization, similar to [ColorBrewer](http://colorbrewer2.org/).\n\nAccess the palette using `clrs$Prism`, and access specific colors with indexes like `clrs$Prism[8]`:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-prism-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"show\"}\nclrs$Prism %>% set_names(1:length(.))\n##         1         2         3         4         5         6         7         8 \n## \"#5F4690\" \"#1D6996\" \"#38A6A5\" \"#0F8554\" \"#73AF48\" \"#EDAD08\" \"#E17C05\" \"#CC503E\" \n##         9        10        11        12 \n## \"#94346E\" \"#6F4070\" \"#994E95\" \"#666666\"\n```\n:::\n\n\n\\ \n\n## Single-ish-color sequential palettes\n\nIn some cases, like with plots that use `geom_lineribbon()`, we use a range of sequential colors. For these, we use several different [sequential palettes from CARTOColors](https://carto.com/carto-colors/) since they tend to match the color scheme from `clrs$prism`.\n\n### Emerald (`clrs$Emrld`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-emrld-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"show\"}\nclrs$Emrld %>% set_names(1:length(.))\n##         1         2         3         4         5         6         7 \n## \"#d3f2a3\" \"#97e196\" \"#6cc08b\" \"#4c9b82\" \"#217a79\" \"#105965\" \"#074050\"\n```\n:::\n\n\n\\ \n\n### Purple orange (`clrs$PurpOr`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-purpor-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"show\"}\nclrs$PurpOr %>% set_names(1:length(.))\n##         1         2         3         4         5         6         7 \n## \"#f9ddda\" \"#f2b9c4\" \"#e597b9\" \"#ce78b3\" \"#ad5fad\" \"#834ba0\" \"#573b88\"\n```\n:::\n\n\n\\ \n\n### Teal (`clrs$Teal`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-teal-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"show\"}\nclrs$Teal %>% set_names(1:length(.))\n##         1         2         3         4         5         6         7 \n## \"#d1eeea\" \"#a8dbd9\" \"#85c4c9\" \"#68abb8\" \"#4f90a6\" \"#3b738f\" \"#2a5674\"\n```\n:::\n\n\n\\ \n\n### Peach (`clrs$Peach`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-peach-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"show\"}\nclrs$Peach %>% set_names(1:length(.))\n##         1         2         3         4         5         6         7 \n## \"#fde0c5\" \"#facba6\" \"#f8b58b\" \"#f59e72\" \"#f2855d\" \"#ef6a4c\" \"#eb4a40\"\n```\n:::\n\n\n\\ \n\n### Sunset (`clrs$Sunset`)\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](design-details_files/figure-html/show-sunset-1.png){fig-align='center' width=100%}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.rl .cell-code  code-fold=\"show\"}\nclrs$Sunset %>% set_names(1:length(.))\n```\n:::\n",
    "supporting": [
      "design-details_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}