---
title: "H~3~: Effect of anti-NGO crackdown on aid recipients"
format:
  html:
    code-fold: true
    toc-depth: 5
    knitr:
      opts_chunk:
        out.width: "80%"
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
options(digits = 3, width = 120,
        dplyr.summarise.inform = FALSE,
        knitr.kable.NA = "")
```

```{scss, echo=FALSE, message=FALSE}
// kableExtra or modelsummary or Quarto or *something* injects `border-bottom: 0` 
// into the inline <table style=XXX> for modelsummary tables when there are notes 
// with multiple lines (most esoteric bug ever!). This nukes the light grey bottom 
// border color that Bootstrap uses, which makes the tables ugly. So this class 
// forces the light grey border back on.
.light-border {
  border-bottom-color: var(--bs-gray-300) !important;
}
```

```{r load-libraries-data, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
library(brms)
library(tidybayes)
library(broom)
library(broom.mixed)
library(modelsummary)
library(marginaleffects)
library(patchwork)
library(scales)
library(ggdist)
library(ggtext)
library(ggh4x)
library(extraDistr)
library(kableExtra)
library(glue)
library(here)

set.seed(1234)

# Load stuff from targets
# Plotting functions
invisible(list2env(tar_read(graphic_functions), .GlobalEnv))
set_annotation_fonts()

# Tell bayesplot to use the sunset palette for things like pp_check()
bayesplot::color_scheme_set(clrs$Sunset[2:7])

# Data
df_country_aid <- tar_read(country_aid_final) %>% 
  filter(year > 2000 & year < 2013)
df_country_aid_laws <- filter(df_country_aid, laws)

# Treatment models
tar_load(c(m_recip_treatment_total_dom, m_recip_treatment_advocacy_dom, 
           m_recip_treatment_entry_dom, m_recip_treatment_funding_dom, 
           m_recip_treatment_ccsi_dom, m_recip_treatment_repress_dom))
tar_load(c(m_recip_treatment_total_foreign, m_recip_treatment_advocacy_foreign, 
           m_recip_treatment_entry_foreign, m_recip_treatment_funding_foreign, 
           m_recip_treatment_ccsi_foreign, m_recip_treatment_repress_foreign))

# IPTW data
tar_load(c(df_recip_iptw_total_dom, df_recip_iptw_advocacy_dom, 
           df_recip_iptw_entry_dom, df_recip_iptw_funding_dom,
           df_recip_iptw_ccsi_dom, df_recip_iptw_repress_dom))
tar_load(c(df_recip_iptw_total_foreign, df_recip_iptw_advocacy_foreign, 
           df_recip_iptw_entry_foreign, df_recip_iptw_funding_foreign,
           df_recip_iptw_ccsi_foreign, df_recip_iptw_repress_foreign))

# Outcome models
tar_load(c(m_recip_outcome_total_dom, m_recip_outcome_advocacy_dom, 
           m_recip_outcome_entry_dom, m_recip_outcome_funding_dom,
           m_recip_outcome_ccsi_dom, m_recip_outcome_repress_dom))
tar_load(c(m_recip_outcome_total_foreign, m_recip_outcome_advocacy_foreign, 
           m_recip_outcome_entry_foreign, m_recip_outcome_funding_foreign,
           m_recip_outcome_ccsi_foreign, m_recip_outcome_repress_foreign))

# Marginal/conditional effects
tar_load(c(mfx_recip_cfx_multiple_dom, mfx_recip_cfx_single_dom,
           mfx_recip_cfx_multiple_foreign, mfx_recip_cfx_single_foreign))

# Results tables
tar_load(c(models_tbl_h3_treatment_num_dom, models_tbl_h3_treatment_denom_dom))
tar_load(c(models_tbl_h3_treatment_num_foreign, models_tbl_h3_treatment_denom_foreign))
tar_load(c(models_tbl_h3_outcome_dejure_dom, models_tbl_h3_outcome_defacto_dom))
tar_load(c(models_tbl_h3_outcome_dejure_foreign, models_tbl_h3_outcome_defacto_foreign))
```

```{r modelsummary-settings}
gofs <- tribble(
  ~raw,          ~clean,     ~fmt, ~omit,
  "nobs",        "N",        0,    FALSE,
  "r.squared",   "\\(R^2\\) (total)",    2,    FALSE,
  "r2.marginal", "\\(R^2\\) (marginal)", 2, FALSE
)

coefs_num <- list(
  "b_barriers_total_lag1" = "Treatment (t − 1)",
  "b_barriers_total_lag2_cumsum" = "Treatment history",
  "b_advocacy_lag1" = "Treatment (t − 1)",
  "b_advocacy_lag2_cumsum" = "Treatment history",
  "b_entry_lag1" = "Treatment (t − 1)",
  "b_entry_lag2_cumsum" = "Treatment history",
  "b_funding_lag1" = "Treatment (t − 1)",
  "b_funding_lag2_cumsum" = "Treatment history",
  "b_v2xcs_ccsi_lag1" = "Treatment (t − 1)",
  "b_v2xcs_ccsi_lag2_cumsum" = "Treatment history",
  "b_v2csreprss_lag1" = "Treatment (t − 1)",
  "b_v2csreprss_lag2_cumsum" = "Treatment history",
  "b_Intercept" = "Intercept",
  "sd_gwcode__Intercept" = "Between-country variability (\\(\\sigma_0\\) for \\(b_0\\) offsets)",
  "sigma" = "Model variability (\\(\\sigma_y\\))"
)

coefs_denom <- list(
  "b_barriers_total_lag1" = "Treatment (t − 1)",
  "b_barriers_total_lag2_cumsum" = "Treatment history",
  "b_advocacy_lag1" = "Treatment (t − 1)",
  "b_advocacy_lag2_cumsum" = "Treatment history",
  "b_entry_lag1" = "Treatment (t − 1)",
  "b_entry_lag2_cumsum" = "Treatment history",
  "b_funding_lag1" = "Treatment (t − 1)",
  "b_funding_lag2_cumsum" = "Treatment history",
  "b_v2xcs_ccsi_lag1" = "Treatment (t − 1)",
  "b_v2xcs_ccsi_lag2_cumsum" = "Treatment history",
  "b_v2csreprss_lag1" = "Treatment (t − 1)",
  "b_v2csreprss_lag2_cumsum" = "Treatment history",
  "b_total_oda_z_lag1" = "Total ODA (standardized; t − 1)",
  "b_prop_contentious_lag1" = "Proportion of contentious aid (t − 1)",
  "b_prop_ngo_dom_lag1" = "Proportion of USAID aid to domestic NGOs (t − 1)",
  "b_prop_ngo_foreign_lag1" = "Proportion of USAID aid to foreign NGOs (t − 1)",
  "b_v2x_polyarchy" = "Polyarchy",
  "b_v2x_corr" = "Corruption index",
  "b_v2x_rule" = "Rule of law index",
  "b_v2x_civlib" = "Civil liberties index",
  "b_v2x_clphy" = "Physical violence index",
  "b_v2x_clpriv" = "Private civil liberties index",
  "b_gdpcap_log_z" = "Log GDP/capita (standardized)",
  "b_un_trade_pct_gdp" = "Percent of GDP from trade",
  "b_v2peedueq" = "Educational equality index",
  "b_v2pehealth" = "Health equality index",
  "b_e_peinfmor" = "Infant mortality rate",
  "b_internal_conflict_past_5TRUE" = "Internal conflict in past 5 years",
  "b_natural_dis_count" = "Count of natural disasters",
  "b_Intercept" = "Intercept",
  "b_year_c" = "Year trend",
  "sd_gwcode__Intercept" = "Between-country intercept variability (\\(\\sigma_0\\) for \\(b_0\\) offsets)",
  "sd_gwcode__year_c" = "Between-country year variability (\\(\\sigma_{17}\\) for \\(b_{17}\\) offsets)",
  "cor_gwcode__Intercept__year_c" = "Correlation between random intercepts and slopes (\\(\\rho\\))",
  "sigma" = "Model variability (\\(\\sigma_y\\))"
)

coefs_outcome <- list(
  "b_barriers_total" = "Treatment (t − 1)",
  "b_barriers_total_lag1_cumsum" = "Treatment history",
  "b_advocacy" = "Treatment (t − 1)",
  "b_advocacy_lag1_cumsum" = "Treatment history",
  "b_entry" = "Treatment (t − 1)",
  "b_entry_lag1_cumsum" = "Treatment history",
  "b_funding" = "Treatment (t − 1)",
  "b_funding_lag1_cumsum" = "Treatment history",
  "b_Intercept" = "Intercept",
  "b_year_c" = "Year",
  "b_hu_year_c" = "Hurdle part: Year",
  "b_hu_Iyear_cE2" = "Hurdle part: Year²",
  "b_hu_Intercept" = "Hurdle part: Intercept",
  "sd_gwcode__Intercept" = "Between-country intercept variability (\\(\\sigma_0\\) for \\(b_0\\) offsets)",
  "sd_gwcode__year_c" = "Between-country year variability (\\(\\sigma_3\\) for \\(b_3\\) offsets)",
  "cor_gwcode__Intercept__year_c" = "Correlation between random intercepts and slopes (\\(\\rho\\))",
  "phi" = "Model dispersion (\\(\\phi_y\\))"
)

treatment_names <- c("Treatment", "Total barriers (t)", "Barriers to advocacy (t)", 
                     "Barriers to entry (t)", "Barriers to funding (t)", "CCSI (t)",
                     "CS repression (t)")
treatment_rows <- as.data.frame(t(treatment_names))
attr(treatment_rows, "position") <- 1

outcome_names <- c("Treatment", "Total barriers (t)", "Barriers to advocacy (t)", 
                   "Barriers to entry (t)", "Barriers to funding (t)")
outcome_rows <- as.data.frame(t(outcome_names))
attr(outcome_rows, "position") <- 1
```

# Weight models

## General idea

See the ["Weight models—General idea" section from the total aid page](models_total-aid.qmd#general-idea) for an explanation of the intuition behind how to create these stabilized weights.

## Actual models

We identify our time-varying and time-invariant confounders based on [our causal model and *do*-calculus logic](causal-model.qmd#final-variables-to-use), and we deal with the panel structure of the data by including random intercepts for country, and both a population-level trend and random slopes for year. We use [generic weakly informative priors](https://mc-stan.org/users/documentation/case-studies/weakly_informative_shapes.html) for our model parameters.

### Numerator

Our numerator models look like this (but with the actual treatment variable replacing `treatment`, like `barriers_total`, `advocacy`, and so on):

```{r fake-numerator, eval=FALSE}
#| code-fold: show
bf(treatment ~ treatment_lag1 + treatment_lag2_cumsum + (1 | gwcode))
```

Or more formally:

$$
\begin{aligned}
\text{Treatment}_{it_j} &\sim \mathcal{N}(\mu_{it_j}, \sigma_y) \\
\mu_{it_j} &= (\beta_0 + b_{0_j}) + \beta_1 \text{Treatment}_{i, t-1_j} + \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} \\
b_{0_j} &\sim \mathcal{N}(0, \sigma_0) \\
\\
\beta_0, \beta_1 &\sim \operatorname{Student~\textit{t}\,}(\nu = 3, \mu = 0, \sigma = 1.5) \\
\sigma_y, \sigma_0 &\sim \operatorname{Exponential}(1)
\end{aligned}
$$

### Denominator

Our denominator models look like this (but again with the actual treatment variable replacing `treatment`):

::: {.panel-tabset}
#### Domestic NGO recipients

```{r fake-denominator-dom, eval=FALSE}
#| code-fold: show
bf(treatment ~ treatment_lag1 + treatment_lag2_cumsum + 
     # Lagged outcome
     prop_ngo_dom_lag1 +
     # Human rights and politics
     v2x_polyarchy + v2x_corr + v2x_rule + v2x_civlib + v2x_clphy + v2x_clpriv +
     # Economics and development
     gdpcap_log_z + un_trade_pct_gdp + v2peedueq + v2pehealth + e_peinfmor +
     # Conflict and disasters
     internal_conflict_past_5 + natural_dis_count +
     # Time and country effects
     year_c + (1 + year_c | gwcode))
```

Or more formally:

$$
\begin{aligned}
\text{Treatment}_{it_j} \sim&\ \mathcal{N}(\mu_{it_j}, \sigma_y) \\
\mu_{it_j} =&\ (\beta_0 + b_{0_j}) + \beta_1\, \text{Treatment}_{i, t-1_j} + \beta_2\, \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} + \\
&\ \beta_3\, \text{Proportion of USAID aid to domestic NGOs}_{i,t-1_j} + \\
&\ \beta_{4 \ldots 9}\, \text{Human rights \& politics}_{it_j} + \\
&\ \beta_{10 \ldots 14}\, \text{Economics \& development} + \beta_{15, 16}\, \text{Conflict \& disasters}_{it_j} + \\
&\ (\beta_{17} + b_{17_j})\, \text{Year}_{it_j} \\
\left(
  \begin{array}{c} 
  b_{0_j} \\
  b_{17_j}
  \end{array}
\right) 
\sim&\ \text{MV}\,\mathcal{N}
\left[
  \left(
    \begin{array}{c}
    0 \\
    0 \\
    \end{array}
  \right)
  , \,
  \left(
  \begin{array}{cc}
     \sigma^2_{0} & \rho_{0, 17}\, \sigma_{0} \sigma_{17} \\ 
     \cdots & \sigma^2_{17}
  \end{array}
\right)
\right] \\
\\
\beta_0 \ldots \beta_{17} \sim&\ \operatorname{Student~\textit{t}\,}(\nu = 3, \mu = 0, \sigma = 1.5) \\
\sigma_y, \sigma_0, \sigma_{17} \sim&\ \operatorname{Exponential}(1) \\
\rho \sim&\ \operatorname{LKJ}(2)
\end{aligned}
$$

#### Foreign NGO recipients

```{r fake-denominator-foreign, eval=FALSE}
#| code-fold: show
bf(treatment ~ treatment_lag1 + treatment_lag2_cumsum + 
     # Lagged outcome
     prop_ngo_foreign_lag1 +
     # Human rights and politics
     v2x_polyarchy + v2x_corr + v2x_rule + v2x_civlib + v2x_clphy + v2x_clpriv +
     # Economics and development
     gdpcap_log_z + un_trade_pct_gdp + v2peedueq + v2pehealth + e_peinfmor +
     # Conflict and disasters
     internal_conflict_past_5 + natural_dis_count +
     # Time and country effects
     year_c + (1 + year_c | gwcode))
```

Or more formally:

$$
\begin{aligned}
\text{Treatment}_{it_j} \sim&\ \mathcal{N}(\mu_{it_j}, \sigma_y) \\
\mu_{it_j} =&\ (\beta_0 + b_{0_j}) + \beta_1\, \text{Treatment}_{i, t-1_j} + \beta_2\, \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} + \\
&\ \beta_3\, \text{Proportion of USAID aid to foreign NGOs}_{i,t-1_j} + \\
&\ \beta_{4 \ldots 9}\, \text{Human rights \& politics}_{it_j} + \\
&\ \beta_{10 \ldots 14}\, \text{Economics \& development} + \beta_{15, 16}\, \text{Conflict \& disasters}_{it_j} + \\
&\ (\beta_{17} + b_{17_j})\, \text{Year}_{it_j} \\
\left(
  \begin{array}{c} 
  b_{0_j} \\
  b_{17_j}
  \end{array}
\right) 
\sim&\ \text{MV}\,\mathcal{N}
\left[
  \left(
    \begin{array}{c}
    0 \\
    0 \\
    \end{array}
  \right)
  , \,
  \left(
  \begin{array}{cc}
     \sigma^2_{0} & \rho_{0, 17}\, \sigma_{0} \sigma_{17} \\ 
     \cdots & \sigma^2_{17}
  \end{array}
\right)
\right] \\
\\
\beta_0 \ldots \beta_{17} \sim&\ \operatorname{Student~\textit{t}\,}(\nu = 3, \mu = 0, \sigma = 1.5) \\
\sigma_y, \sigma_0, \sigma_{17} \sim&\ \operatorname{Exponential}(1) \\
\rho \sim&\ \operatorname{LKJ}(2)
\end{aligned}
$$

:::


## MCMC diagnostics

Just to make sure everything converged nicely, we check some diagnostics for the weight models for the total barriers treatment for domestic NGO recipients. All the other models look basically the same as this—everything's fine.

### Numerator

::: {.panel-tabset}

#### Trace plots

```{r plot-num-trace, warning=FALSE}
#| out-width: 80%
m_recip_treatment_total_dom$model_num %>% 
  gather_draws(`^b_.*|^sd_.*|^sigma`, regex = TRUE) %>% 
  ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
  geom_line(linewidth = 0.1) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors()
```

#### Trank plots

```{r plot-num-trank, warning=FALSE}
#| out-width: 80%
m_recip_treatment_total_dom$model_num %>% 
  gather_draws(`^b_.*|^sd_.*|^sigma`, regex = TRUE) %>% 
  group_by(.variable) %>% 
  mutate(draw_rank = rank(.value)) %>% 
  ggplot(aes(x = draw_rank, color = factor(.chain))) +
  stat_bin(geom = "step", binwidth = 500, position = position_identity(), boundary = 0) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())
```

#### Posterior predictive check

```{r plot-num-ppcheck}
#| out-width: 80%
withr::with_seed(1234, {
  pp_check(m_recip_treatment_total_dom$model_num, ndraws = 20) +
    labs(x = "Total NGO barriers",
         title = "Numerator model") +
    theme_donors()
})
```

:::

### Denominator

::: {.panel-tabset}

#### Trace plots

```{r plot-denom-trace, warning=FALSE, fig.width=10, fig.height=7}
#| out-width: 100%
m_recip_treatment_total_dom$model_denom %>% 
  gather_draws(`^b_.*|^sd_.*|^cor_.*|^sigma`, regex = TRUE) %>% 
  ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
  geom_line(linewidth = 0.1) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors()
```

#### Trank plots

```{r plot-denom-trank, warning=FALSE, fig.width=10, fig.height=7}
#| out-width: 100%
m_recip_treatment_total_dom$model_denom %>% 
  gather_draws(`^b_.*|^sd_.*|^cor_.*|^sigma`, regex = TRUE) %>% 
  group_by(.variable) %>% 
  mutate(draw_rank = rank(.value)) %>% 
  ggplot(aes(x = draw_rank, color = factor(.chain))) +
  stat_bin(geom = "step", binwidth = 500, position = position_identity(), boundary = 0) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())
```

#### Posterior predictive check

```{r plot-denom-ppcheck}
#| out-width: 80%
withr::with_seed(1234, {
  pp_check(m_recip_treatment_total_dom$model_denom, ndraws = 20) +
    labs(x = "Total NGO barriers",
         title = "Denominator model") +
    theme_donors()
})
```

:::


## Check weights

IPTWs should generally have a mean of 1 and shouldn't be too incredibly high. When they're big, it's a good idea to truncate them at some reasonable level.

:::: {.panel-tabset}

### Total barriers

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

The max weight here is `r round(max(df_recip_iptw_total_dom$iptw), 0)`, but there are only a handful of observations with weights that high. The average is `r round(mean(df_recip_iptw_total_dom$iptw), 2)` and the median is `r round(median(df_recip_iptw_total_dom$iptw), 2)`, which are both essentially 1, so we're good.

```{r iptws-total-oda-dom}
#| code-fold: show
summary(df_recip_iptw_total_dom$iptw)
```

```{r plot-iptws-total-oda-dom}
df_recip_iptw_total_dom %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### % of aid to foreign NGO recipients

The max weight here is `r round(max(df_recip_iptw_total_foreign$iptw), 0)`, but there are only a handful of observations with weights that high. The average is `r round(mean(df_recip_iptw_total_foreign$iptw), 2)` and the median is `r round(median(df_recip_iptw_total_foreign$iptw), 2)`, which are both essentially 1, so we're still good.

```{r iptws-total-oda-foreign}
#| code-fold: show
summary(df_recip_iptw_total_foreign$iptw)
```

```{r plot-iptws-total-oda-foreign}
df_recip_iptw_total_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

:::

### Advocacy

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

The max weight here is `r round(max(df_recip_iptw_advocacy_dom$iptw), 0)` which is lovely. The average is `r round(mean(df_recip_iptw_advocacy_dom$iptw), 2)`, so we're good.

```{r iptws-advocacy-dom}
#| code-fold: show
summary(df_recip_iptw_advocacy_dom$iptw)
```

```{r plot-iptws-advocacy-dom}
df_recip_iptw_advocacy_dom %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### % of aid to foreign NGO recipients

The max weight here is `r round(max(df_recip_iptw_advocacy_foreign$iptw), 0)` which is lovely. The average is `r round(mean(df_recip_iptw_advocacy_foreign$iptw), 2)`, so we're good.

```{r iptws-advocacy-foreign}
#| code-fold: show
summary(df_recip_iptw_advocacy_foreign$iptw)
```

```{r plot-iptws-advocacy-foreign}
df_recip_iptw_advocacy_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

:::

### Entry

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

The max weight here is `r round(max(df_recip_iptw_entry_dom$iptw), 0)` which is grand. The average is `r round(mean(df_recip_iptw_entry_dom$iptw), 2)`, so we're golden.

```{r iptws-entry-dom}
#| code-fold: show
summary(df_recip_iptw_entry_dom$iptw)
```

```{r plot-iptws-entry-dom}
df_recip_iptw_entry_dom %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### % of aid to foreign NGO recipients

The max weight here is `r round(max(df_recip_iptw_entry_foreign$iptw), 0)` which is grand. The average is `r round(mean(df_recip_iptw_entry_foreign$iptw), 2)`, so we're golden.

```{r iptws-entry-foreign}
#| code-fold: show
summary(df_recip_iptw_entry_foreign$iptw)
```

```{r plot-iptws-entry-foreign}
df_recip_iptw_entry_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

:::

### Funding

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

The max weight here is `r round(max(df_recip_iptw_funding_dom$iptw), 0)` which is fine. The average is `r round(mean(df_recip_iptw_funding_dom$iptw), 2)`, so all is well.

```{r iptws-funding-dom}
#| code-fold: show
summary(df_recip_iptw_funding_dom$iptw)
```

```{r plot-iptws-funding-dom}
df_recip_iptw_funding_dom %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

#### % of aid to foreign NGO recipients

The max weight here is `r round(max(df_recip_iptw_funding_foreign$iptw), 0)` which is fine. The average is `r round(mean(df_recip_iptw_funding_foreign$iptw), 2)`, so all is well.

```{r iptws-funding-foreign}
#| code-fold: show
summary(df_recip_iptw_funding_foreign$iptw)
```

```{r plot-iptws-funding-foreign}
df_recip_iptw_funding_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(binwidth = 0.5, boundary = 0) +
  theme_donors()
```

:::

### Core civil society index

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

lol these blow up again. The max weight is `r label_comma()(max(df_recip_iptw_ccsi_dom$iptw))`, which, oh no.

```{r iptws-ccsi-dom}
#| code-fold: show
summary(df_recip_iptw_ccsi_dom$iptw)
```

There aren't a lot of observations with weights that high though. Check out the counts of rows with weights greater than 50 and greater than 500—only 100ish:

```{r show-threshold-counts-iptws-ccsi-dom}
#| code-fold: show
df_recip_iptw_ccsi_dom %>% count(iptw >= 50)
df_recip_iptw_ccsi_dom %>% count(iptw >= 500)
```

We truncate these weights at 50.

```{r plot-iptws-ccsi-dom}
plot_iptw_ccsi_dom <- bind_rows(
  df_recip_iptw_ccsi_dom %>% mutate(threshold = 50, iptw = ifelse(iptw > threshold, threshold, iptw)),
  df_recip_iptw_ccsi_dom %>% mutate(threshold = 500, iptw = ifelse(iptw > threshold, threshold, iptw))
) %>% 
  mutate(threshold = paste0("Truncated at ", threshold),
         threshold = fct_inorder(threshold))

plot_iptw_ccsi_dom %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap(vars(threshold), scales = "free_x") +
  theme_donors()
```

#### % of aid to foreign NGO recipients

lol these blow up again. The max weight is `r label_comma()(max(df_recip_iptw_ccsi_foreign$iptw))`, which, oh no.

```{r iptws-ccsi-foreign}
#| code-fold: show
summary(df_recip_iptw_ccsi_foreign$iptw)
```

We also truncate these weights at 50.

```{r plot-iptws-ccsi-foreign}
plot_iptw_ccsi_foreign <- df_recip_iptw_ccsi_foreign %>% 
  mutate(threshold = 50, iptw = ifelse(iptw > threshold, threshold, iptw)) %>% 
  mutate(threshold = paste0("Truncated at ", threshold),
         threshold = fct_inorder(threshold))

plot_iptw_ccsi_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap(vars(threshold), scales = "free_x") +
  theme_donors()
```

:::

### Civil society repression

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

These weights are also horrendous, with a maximum weight of `r label_comma()(max(df_recip_iptw_repress_dom$iptw))`.

```{r iptws-csrepress-dom}
#| code-fold: show
summary(df_recip_iptw_repress_dom$iptw)
```

As with the core civil society index, there aren't a lot of observations with weights that high:

```{r show-threshold-counts-iptws-csrepress-dom}
#| code-fold: show
df_recip_iptw_repress_dom %>% count(iptw >= 50)
df_recip_iptw_repress_dom %>% count(iptw >= 500)
```

So we truncate these weights at 50 again. Since the results from the core civil society models are basically the same when truncating at 500, we only use a truncation point of 50 here.

```{r plot-iptws-csrepress-dom}
df_recip_iptw_ccsi_dom %>% 
  mutate(threshold = 50, iptw = ifelse(iptw > threshold, threshold, iptw)) %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(bins = 50, boundary = 0) +
  theme_donors()
```

#### % of aid to foreign NGO recipients

lol these blow up again. The max weight is `r label_comma()(max(df_recip_iptw_repress_foreign$iptw))`, which, oh no.

```{r iptws-csrepress-foreign}
#| code-fold: show
summary(df_recip_iptw_repress_foreign$iptw)
```

We also truncate these weights at 50.

```{r plot-iptws-csrepress-foreign}
plot_iptw_repress_foreign <- df_recip_iptw_repress_foreign %>% 
  mutate(threshold = 50, iptw = ifelse(iptw > threshold, threshold, iptw)) %>% 
  mutate(threshold = paste0("Truncated at ", threshold),
         threshold = fct_inorder(threshold))

plot_iptw_repress_foreign %>% 
  ggplot(aes(x = iptw)) +
  geom_histogram(bins = 50, boundary = 0) +
  facet_wrap(vars(threshold), scales = "free_x") +
  theme_donors()
```

:::

::::

## Results

These are less important since we just use these treatment models to generate weights *and* because interpreting each coefficient when trying to isolate causal effects is unimportant [@WestreichGreenland:2013; @KeeleStevensonElwert:2020].

:::: {.panel-tabset}

### % of aid to domestic NGO recipients

::: {.panel-tabset}

#### Numerator

```{r tbl-h3-num-dom, warning=FALSE, eval=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h3_treatment_num_dom <- models_tbl_h3_treatment_num_dom %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_treatment_num_dom,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_num,
             gof_map = gofs,
             output = "kableExtra",
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2)) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

#### Denominator

```{r tbl-h3-denom-dom, warning=FALSE, eval=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h3_treatment_denom_dom <- models_tbl_h3_treatment_denom_dom %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_treatment_denom_dom,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_denom,
             gof_map = gofs,
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2),
             notes = notes) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

:::

### % of aid to foreign NGO recipients

::: {.panel-tabset}

#### Numerator

```{r tbl-h3-num-foreign, warning=FALSE, eval=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h3_treatment_num_foreign <- models_tbl_h3_treatment_num_foreign %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_treatment_num_foreign,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_num,
             gof_map = gofs,
             output = "kableExtra",
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2)) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

#### Denominator

```{r tbl-h3-denom-foreign, warning=FALSE, eval=FALSE}
#| tbl-cap: Results from all numerator models
models_tbl_h3_treatment_denom_foreign <- models_tbl_h3_treatment_denom_foreign %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals in brackets", 
  "Total \\(R^2\\) considers the variance of both population and group effects", 
  "Marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_treatment_denom_foreign,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = treatment_rows,
             coef_map = coefs_denom,
             gof_map = gofs,
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2),
             notes = notes) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border")
```

:::

::::


# Outcome models

Our outcome variable for these hypotheses is the proportion of USAID aid allocated to (1) domestic and (2) foreign NGOs, which are (1) bounded between 0% and 100% and (2) have a lot of zeros.

```{r tbl-zero-summary}
#| tbl-cap: 0s in recipient outcomes
bind_rows(
  `Proportion of aid to domestic NGOs` = count(df_country_aid_laws, is_zero = prop_ngo_dom == 0),
  `Proportion of aid to foreign NGOs` = count(df_country_aid_laws, is_zero = prop_ngo_foreign == 0),
  .id = "Outcome"
) %>% 
  group_by(Outcome) %>% 
  mutate(`Number of 0s` = glue::glue("{n[2]} / {sum(n)}")) %>% 
  mutate(`Proportion of 0s` = label_percent(accuracy = 0.1)(n / sum(n))) %>% 
  ungroup() %>% 
  filter(is_zero) %>% select(-is_zero, -n) %>% 
  kbl(align = c("l", "c", "c")) %>% 
  kable_styling(htmltable_class = "table table-sm",
                full_width = FALSE)
```

```{r plot-zero-recip, fig.width=8, fig.height=3.5}
#| out-width: 90%
#| column: page-inset-right
p1 <- df_country_aid_laws %>%
  mutate(is_zero = prop_ngo_dom == 0) %>% 
  mutate(prop_ngo_dom = ifelse(is_zero, -0.05, prop_ngo_dom))  %>%  
  ggplot(aes(x = prop_ngo_dom)) +
  geom_histogram(aes(fill = is_zero), binwidth = 0.05, 
                 linewidth = 0.25, boundary = 0, color = "white") +
  geom_vline(xintercept = 0) + 
  scale_x_continuous(labels = label_percent()) +
  scale_y_continuous(labels = label_comma()) +
  scale_fill_manual(values = c(clrs$Prism[2], clrs$Prism[8]), 
                    guide = guide_legend(reverse = TRUE)) +
  labs(x = "Proportion of aid to domestic NGOs", y = NULL, fill = "Is zero?") +
  coord_cartesian(ylim = c(0, 1500)) +
  theme_donors() +
  theme(legend.position = "bottom")

p2 <- df_country_aid_laws %>%
  mutate(is_zero = prop_ngo_foreign == 0) %>% 
  mutate(prop_ngo_foreign = ifelse(is_zero, -0.05, prop_ngo_foreign))  %>%  
  ggplot(aes(x = prop_ngo_foreign)) +
  geom_histogram(aes(fill = is_zero), binwidth = 0.05, 
                 linewidth = 0.25, boundary = 0, color = "white") +
  geom_vline(xintercept = 0) + 
  scale_x_continuous(labels = label_percent()) +
  scale_y_continuous(labels = label_comma()) +
  scale_fill_manual(values = c(clrs$Prism[2], clrs$Prism[8]), 
                    guide = guide_legend(reverse = TRUE)) +
  labs(x = "Proportion of aid to foreign NGOs", y = NULL, fill = "Is zero?") +
  coord_cartesian(ylim = c(0, 1500)) +
  theme_donors() +
  theme(legend.position = "bottom")

(p1 | p2) +
  plot_layout(guides = "collect") +
  plot_annotation(theme = theme(legend.position = "bottom"))
```

Because of this distribution, we use a zero-inflated beta family to model the outcome. [This guide to working with tricky outcomes with lots of zeros](model-tricky-outcomes.qmd#zero-inflated-models-proportions) explores all the intricacies of zero-inflated beta families, so we won't go into tons of detail here.

As with foreign aid, we’re not entirely sure what the actual underlying zero process is for the proportion of contentious aid, but from looking at the data, we know that there’s a time component—in the early 2000s, very few countries received no contentious aid. We thus model the zero-inflated part of the model with year and year squared since the year trend is parabolic and nonlinear.

```{r plot-prop-zero-zi, fig.width=8, fig.height=3.5}
#| out-width: 90%
#| column: page-inset-right
p1 <- df_country_aid_laws %>% 
  group_by(year) %>% 
  summarize(prop_zero = mean(prop_ngo_dom == 0)) %>% 
  ggplot(aes(x = year, y = prop_zero)) +
  geom_line(linewidth = 0.5, color = "grey70") +
  geom_point(size = 1) + 
  geom_smooth(aes(color = "y = x"), method = "lm", 
              formula = y ~ x, se = FALSE) +
  geom_smooth(aes(color = "y = x + x<sup>2</sup>"), method = "lm", 
              formula = y ~ x + I(x^2), se = FALSE) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_manual(values = clrs$Prism[c(3, 11)]) +
  labs(x = NULL, y = "Proportion of countries\nwith zero aid to domestic NGOs",
       color = NULL) +
  coord_cartesian(ylim = c(0.15, 0.45)) +
  theme_donors() +
  theme(legend.text = element_markdown())

p2 <- df_country_aid_laws %>% 
  group_by(year) %>% 
  summarize(prop_zero = mean(prop_ngo_foreign == 0)) %>% 
  ggplot(aes(x = year, y = prop_zero)) +
  geom_line(linewidth = 0.5, color = "grey70") +
  geom_point(size = 1) + 
  geom_smooth(aes(color = "y = x"), method = "lm", 
              formula = y ~ x, se = FALSE) +
  geom_smooth(aes(color = "y = x + x<sup>2</sup>"), method = "lm", 
              formula = y ~ x + I(x^2), se = FALSE) +
  scale_y_continuous(labels = label_percent()) +
  scale_color_manual(values = clrs$Prism[c(3, 11)]) +
  labs(x = NULL, y = "Proportion of countries\nwith zero aid to foreign NGOs",
       color = NULL) +
  coord_cartesian(ylim = c(0.15, 0.45)) +
  theme_donors() +
  theme(legend.text = element_markdown())

(p1 | p2) +
  plot_layout(guides = "collect") +
  plot_annotation(theme = theme(legend.position = "bottom"))
```


## Formal model and priors

Our final models look like this (again with `treatment` replaced by the actual treatment column):

:::: {.panel-tabset}

#### Domestic NGO recipients

```{r fake-outcome-dom, eval=FALSE}
#| code-fold: show
bf(prop_ngo_dom | weights(iptw) ~ treatment_lag1 + treatment_lag2_cumsum +
     year_c + (1 + year_c | gwcode),
   zi ~ year_c + I(year_c^2))
```

#### Foreign NGO recipients

```{r fake-outcome-foreign, eval=FALSE}
#| code-fold: show
bf(prop_ngo_foreign | weights(iptw) ~ treatment_lag1 + treatment_lag2_cumsum +
     year_c + (1 + year_c | gwcode),
   zi ~ year_c + I(year_c^2))
```

:::

Or more formally:

::: {.column-page-inset-right}

$$
\begin{aligned}
&\ \mathrlap{\textbf{Zero-inflated model of proportion $i$ across time $t$ within each country $j$}} \\
\text{Proportion}_{it_j} \sim&\ \mathrlap{\begin{cases}
0 & \text{with probability } \pi_{it} + [(1 - \pi_{it}) \times \operatorname{Beta}(0 \mid \mu_{it_j}, \phi_y)] \\[4pt]
\operatorname{Beta}(\mu_{it_j}, \phi_y) & \text{with probability } (1 - \pi_{it}) \times \operatorname{Beta}(\text{Proportion}_{it_j} \mid \mu_{it_j}, \phi_y)
\end{cases}} \\
\\
&\ \textbf{Models for distribution parameters} \\
\operatorname{logit}(\pi_{it}) =&\ \gamma_0 + \gamma_1 \text{Year}_{it} + \gamma_2 \text{Year}^2_{it} & \text{Zero-inflation process} \\[4pt]
\operatorname{logit}(\mu_{it_j}) =&\ \text{IPTW}_{i, t-1_j} \times \Bigl[ (\beta_0 + b_{0_j}) + \beta_1\, \text{Treatment}_{i, t-1_j} + \\
&\ \beta_2\, \textstyle{\sum_{\tau = (t-2)}^{t}} \text{Treatment}_{i\tau} + (\beta_3 + b_{3_j}) \text{Year}_{it_j} \Bigr] & \text{Within-country variation} \\[4pt]
\left(
  \begin{array}{c} 
  b_{0_j} \\
  b_{3_j}
  \end{array}
\right) 
\sim&\ \text{MV}\,\mathcal{N}
\left[
  \left(
    \begin{array}{c}
    0 \\
    0 \\
    \end{array}
  \right)
  , \,
  \left(
  \begin{array}{cc}
     \sigma^2_{0} & \rho_{0, 3}\, \sigma_{0} \sigma_{3} \\ 
     \cdots & \sigma^2_{3}
  \end{array}
\right)
\right] & \text{Variability in average intercepts and slopes} \\
\\
&\ \textbf{Priors} \\
\gamma_0 \sim&\ \text{Student $t$}(\nu = 3, \mu = 0, \sigma = 1.5) & \text{Prior for intercept in zero-inflated model} \\
\gamma_1, \gamma_2 \sim&\ \text{Student $t$}(3, 0, 1.5) & \text{Prior for year effect in zero-inflated model} \\
\beta_0 \sim&\ \text{Student $t$}(3, 0, 1.5) & \text{Prior for global average proportion} \\
\beta_1, \beta_2, \beta_3 \sim&\ \text{Student $t$}(3, 0, 1.5) & \text{Prior for global effects} \\
\phi_y \sim&\ \operatorname{Exponential}(1) & \text{Prior for within-country dispersion} \\
\sigma_0, \sigma_3 \sim&\ \operatorname{Exponential}(1) & \text{Prior for within-country variability} \\
\rho \sim&\ \operatorname{LKJ}(2) & \text{Prior for between-country variability}
\end{aligned}
$$

:::


## MCMC diagnostics

To check that everything converged nicely, we check some diagnostics for the outcome models for the total barriers treatment for domestic NGO recipients. All the other models look basically the same as this—everything's fine.

::: {.panel-tabset}

### Trace plots

```{r plot-outcome-trace, warning=FALSE}
#| out-width: 80%
m_recip_outcome_total_dom$model %>% 
  gather_draws(`^b_.*|^sd_.*|^phi`, regex = TRUE) %>% 
  ggplot(aes(x = .iteration, y = .value, color = factor(.chain))) +
  geom_line(linewidth = 0.1) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors()
```

### Trank plots

```{r plot-outcome-trank, warning=FALSE}
#| out-width: 80%
m_recip_outcome_total_dom$model %>% 
  gather_draws(`^b_.*|^sd_.*|^phi`, regex = TRUE) %>% 
  group_by(.variable) %>% 
  mutate(draw_rank = rank(.value)) %>% 
  ggplot(aes(x = draw_rank, color = factor(.chain))) +
  stat_bin(geom = "step", binwidth = 1000, position = position_identity(), boundary = 0) +
  scale_color_manual(values = clrs$Sunset[3:6]) +
  facet_wrap(vars(.variable), scales = "free_y") +
  theme_donors() +
  theme(axis.text.y = element_blank(), axis.title.y = element_blank(), axis.ticks.y = element_blank())
```

### Posterior predictive check

```{r plot-outcome-ppcheck, message=FALSE}
#| out-width: 80%
withr::with_seed(1234, {
  pp_check(m_recip_outcome_total_dom$model, ndraws = 20) +
    labs(x = "Proportion of aid to domestic NGOs",
         title = "Outcome model") +
    theme_donors() +
    coord_cartesian(xlim = c(0, 1))
})
```

:::


## Analyzing the posterior

### Average treatment effects

:::: {.panel-tabset}

#### Total barriers

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-total-dom}
#| out-width: 80%
m_recip_outcome_total_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_total_dom$model,
                                 year_c = 0,
                                 barriers_total = seq(0, 10, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = barriers_total, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = seq(0, 10, by = 2)) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Total barriers", y = "Predicted proportion of\naid to domestic NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-total-dom}
mfx_recip_cfx_multiple_dom$total %>% 
  select(barriers_total, dydx, conf.low, conf.high)
```

```{r cfx-mfx-total-p-direction-dom}
mfx_total_p_direction_dom <- mfx_recip_cfx_multiple_dom$total %>% 
  posteriordraws() %>% 
  filter(barriers_total == 1) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-total-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$total %>% 
  posteriordraws() %>% 
  filter(barriers_total %in% c(1, 7)) %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(barriers_total))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6)]) +
  labs(x = "Conditional effect of total barriers on\nproportion of aid to domestic NGOs in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_total_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-total-foreign}
#| out-width: 80%
m_recip_outcome_total_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_total_foreign$model,
                                 year_c = 0,
                                 barriers_total = seq(0, 10, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = barriers_total, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = seq(0, 10, by = 2)) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Total barriers", y = "Predicted proportion of\naid to foreign NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-total-foreign}
mfx_recip_cfx_multiple_foreign$total %>% 
  select(barriers_total, dydx, conf.low, conf.high)
```

```{r cfx-mfx-total-p-direction-foreign}
mfx_total_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$total %>% 
  posteriordraws() %>% 
  filter(barriers_total == 1) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-total-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$total %>% 
  posteriordraws() %>% 
  filter(barriers_total %in% c(1, 7)) %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(barriers_total))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6)]) +
  labs(x = "Conditional effect of total barriers on\nproportion of aid to foreign NGOs in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_total_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```
:::

#### Advocacy

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-advocacy-dom}
#| out-width: 80%
m_recip_outcome_advocacy_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_advocacy_dom$model,
                                 year_c = 0,
                                 advocacy = seq(0, 2, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = advocacy, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:2) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to advocacy", y = "Predicted proportion of\naid to domestic NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-advocacy-dom}
mfx_recip_cfx_multiple_dom$advocacy %>% 
  select(advocacy, dydx, conf.low, conf.high)
```

```{r cfx-mfx-advocacy-p-direction-dom}
mfx_advocacy_p_direction_dom <- mfx_recip_cfx_multiple_dom$advocacy %>% 
  posteriordraws() %>% 
  filter(advocacy == 1) %>% 
  summarize(pd = sum(draw > 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-advocacy-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$advocacy %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(advocacy))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6)]) +
  labs(x = "Conditional effect of\nbarriers to advocacy on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE > 0) = {pull(mfx_advocacy_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-advocacy-foreign}
#| out-width: 80%
m_recip_outcome_advocacy_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_advocacy_foreign$model,
                                 year_c = 0,
                                 advocacy = seq(0, 2, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = advocacy, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:2) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to advocacy", y = "Predicted proportion of\naid to foreign NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-advocacy-foreign}
mfx_recip_cfx_multiple_foreign$advocacy %>% 
  select(advocacy, dydx, conf.low, conf.high)
```

```{r cfx-mfx-advocacy-p-direction-foreign}
mfx_advocacy_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$advocacy %>% 
  posteriordraws() %>% 
  filter(advocacy == 1) %>% 
  summarize(pd = sum(draw > 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-advocacy-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$advocacy %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(advocacy))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6)]) +
  labs(x = "Conditional effect of\nbarriers to advocacy on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE > 0) = {pull(mfx_advocacy_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```

:::

#### Entry

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-entry-dom}
#| out-width: 80%
m_recip_outcome_entry_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_entry_dom$model,
                                 year_c = 0,
                                 entry = seq(0, 3, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = entry, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:3) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to entry", y = "Predicted proportion of\naid to domestic NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-entry-dom}
mfx_recip_cfx_multiple_dom$entry %>% 
  select(entry, dydx, conf.low, conf.high)
```

```{r cfx-mfx-entry-p-direction-dom}
mfx_entry_p_direction_dom <- mfx_recip_cfx_multiple_dom$entry %>% 
  posteriordraws() %>% 
  filter(entry == 1) %>% 
  summarize(pd = sum(draw > 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-entry-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$entry %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(entry))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\nbarriers to entry on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE > 0) = {pull(mfx_entry_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-entry-foreign}
#| out-width: 80%
m_recip_outcome_entry_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_entry_foreign$model,
                                 year_c = 0,
                                 entry = seq(0, 3, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = entry, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:3) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to entry", y = "Predicted proportion of\naid to foreign NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-entry-foreign}
mfx_recip_cfx_multiple_foreign$entry %>% 
  select(entry, dydx, conf.low, conf.high)
```

```{r cfx-mfx-entry-p-direction-foreign}
mfx_entry_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$entry %>% 
  posteriordraws() %>% 
  filter(entry == 1) %>% 
  summarize(pd = sum(draw > 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-entry-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$entry %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(entry))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\nbarriers to entry on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE > 0) = {pull(mfx_entry_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```

:::

#### Funding

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-funding-dom}
#| out-width: 80%
m_recip_outcome_funding_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_funding_dom$model,
                                 year_c = 0,
                                 funding = seq(0, 4, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = funding, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:4) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to funding", y = "Predicted proportion of\naid to domestic NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-funding-dom}
mfx_recip_cfx_multiple_dom$funding %>% 
  select(funding, dydx, conf.low, conf.high)
```

```{r cfx-mfx-funding-p-direction-dom}
mfx_funding_p_direction_dom <- mfx_recip_cfx_multiple_dom$funding %>% 
  posteriordraws() %>% 
  filter(funding == 1) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-funding-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$funding %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(funding))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\nbarriers to funding on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_funding_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-funding-foreign}
#| out-width: 80%
m_recip_outcome_funding_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_funding_foreign$model,
                                 year_c = 0,
                                 funding = seq(0, 4, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = funding, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_x_continuous(breaks = 0:4) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Barriers to funding", y = "Predicted proportion of\naid to foreign NGOs in the following year") +
  theme_donors()
```

```{r cfx-mfx-funding-foreign}
mfx_recip_cfx_multiple_foreign$funding %>% 
  select(funding, dydx, conf.low, conf.high)
```

```{r cfx-mfx-funding-p-direction-foreign}
mfx_funding_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$funding %>% 
  posteriordraws() %>% 
  filter(funding == 1) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-funding-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$funding %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(funding))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\nbarriers to funding on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_funding_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```

:::

#### Core civil society index

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-ccsi-dom}
#| out-width: 80%
m_recip_outcome_ccsi_dom$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_ccsi_dom$model_50,
                                 year_c = 0,
                                 v2xcs_ccsi = seq(0, 1, 0.1)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2xcs_ccsi, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Core civil society index", y = "Predicted proportion of\naid to domestic NGOs in the following year",
       caption = "Higher values represent better respect for civil society") +
  theme_donors()
```

```{r cfx-mfx-ccsi-dom}
mfx_recip_cfx_multiple_dom$ccsi %>% 
  select(v2xcs_ccsi, dydx, conf.low, conf.high)
```

```{r cfx-mfx-ccsi-p-direction-dom}
mfx_ccsi_p_direction_dom <- mfx_recip_cfx_multiple_dom$ccsi %>% 
  posteriordraws() %>% 
  filter(v2xcs_ccsi == 0.5) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-ccsi-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$ccsi %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(v2xcs_ccsi))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\ncore civil society index on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_ccsi_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-ccsi-foreign}
#| out-width: 80%
m_recip_outcome_ccsi_foreign$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_ccsi_foreign$model_50,
                                 year_c = 0,
                                 v2xcs_ccsi = seq(0, 1, 0.1)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2xcs_ccsi, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Core civil society index", y = "Predicted proportion of\naid to foreign NGOs in the following year",
       caption = "Higher values represent better respect for civil society") +
  theme_donors()
```

```{r cfx-mfx-ccsi-foreign}
mfx_recip_cfx_multiple_foreign$ccsi %>% 
  select(v2xcs_ccsi, dydx, conf.low, conf.high)
```

```{r cfx-mfx-ccsi-p-direction-foreign}
mfx_ccsi_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$ccsi %>% 
  posteriordraws() %>% 
  filter(v2xcs_ccsi == 0.5) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-ccsi-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$ccsi %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(v2xcs_ccsi))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\ncore civil society index on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_ccsi_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```

:::

#### Civil society repression

::: {.panel-tabset}
##### % of aid to domestic NGO recipients

```{r plot-cfx-range-repress-dom}
#| out-width: 80%
m_recip_outcome_repress_dom$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_repress_dom$model_50,
                                 year_c = 0,
                                 v2csreprss = seq(-4, 3, 0.25)),
              re_formula = NA)  %>% 
  ggplot(aes(x = v2csreprss, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Civil society repression", y = "Predicted proportion of\naid to domestic NGOs in the following year",
       caption = "Higher values represent better respect for civil society") +
  theme_donors()
```

```{r cfx-mfx-repress-dom}
mfx_recip_cfx_multiple_dom$repress %>% 
  select(v2csreprss, dydx, conf.low, conf.high)
```

```{r cfx-mfx-repress-p-direction-dom}
mfx_repress_p_direction_dom <- mfx_recip_cfx_multiple_dom$repress %>% 
  posteriordraws() %>% 
  filter(v2csreprss == 0) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-repress-dom}
#| out-width: 80%
mfx_recip_cfx_multiple_dom$repress %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(v2csreprss))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\ncivil society repression on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_repress_p_direction_dom, pd_short)}"), fill = NULL) +
  theme_donors()
```

##### % of aid to foreign NGO recipients

```{r plot-cfx-range-repress-foreign}
#| out-width: 80%
m_recip_outcome_repress_foreign$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_repress_foreign$model_50,
                                 year_c = 0,
                                 v2csreprss = seq(-4, 3, 0.25)),
              re_formula = NA)  %>% 
  ggplot(aes(x = v2csreprss, y = .epred)) +
  stat_lineribbon(color = clrs$Peach[7]) +
  scale_y_continuous(labels = label_percent()) +
  scale_fill_manual(values = clrs$Peach[1:3]) +
  guides(fill = "none") +
  labs(x = "Civil society repression", y = "Predicted proportion of\naid to foreign NGOs in the following year",
       caption = "Higher values represent better respect for civil society") +
  theme_donors()
```

```{r cfx-mfx-repress-foreign}
mfx_recip_cfx_multiple_foreign$repress %>% 
  select(v2csreprss, dydx, conf.low, conf.high)
```

```{r cfx-mfx-repress-p-direction-foreign}
mfx_repress_p_direction_foreign <- mfx_recip_cfx_multiple_foreign$repress %>% 
  posteriordraws() %>% 
  filter(v2csreprss == 0) %>% 
  summarize(pd = sum(draw < 0) / n()) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r plot-cfx-mfx-repress-foreign}
#| out-width: 80%
mfx_recip_cfx_multiple_foreign$repress %>% 
  posteriordraws() %>% 
  pivot_longer(draw) %>% 
  ggplot(aes(x = value, fill = factor(v2csreprss))) +
  stat_halfeye(alpha = 0.7) +
  scale_fill_manual(values = clrs$Sunset[c(1, 2, 4, 6, 7)]) +
  labs(x = "Conditional effect of\ncivil society repression on ODA in the following year", y = NULL,
       subtitle = glue("P(ATE < 0) = {pull(mfx_repress_p_direction_foreign, pd_short)}"), fill = NULL) +
  theme_donors()
```

:::

::::


### Combined plots

#### Predictions: Proportion of aid to domestic NGOs

```{r build-cfx-predictions-combined-dom}
ci_cols <- c("grey70", "grey45", "grey20")

p1 <- m_recip_outcome_total_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_total_dom$model,
                                 year_c = 0,
                                 barriers_total = seq(0, 10, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = barriers_total, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = seq(0, 10, by = 2)) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$PurpOr[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$PurpOr[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.085)) +
  facet_wrap(vars("Total barriers")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p2 <- m_recip_outcome_advocacy_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_advocacy_dom$model,
                                 year_c = 0,
                                 advocacy = seq(0, 2, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = advocacy, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:2) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Teal[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Teal[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.085)) +
  facet_wrap(vars("Barriers to advocacy")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p3 <- m_recip_outcome_entry_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_entry_dom$model,
                                 year_c = 0,
                                 entry = seq(0, 3, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = entry, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:3) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Emrld[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Emrld[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.085)) +
  facet_wrap(vars("Barriers to entry")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p4 <- m_recip_outcome_funding_dom$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_funding_dom$model,
                                 year_c = 0,
                                 funding = seq(0, 4, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = funding, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:4) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Peach[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Peach[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.085)) +
  facet_wrap(vars("Barriers to funding")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))
```

```{r plot-cfx-predictions-combined-dom, fig.width=7, fig.height=5}
#| out-width: 90%
#| fig-cap: "The effect of de jure anti-NGO legal barriers on predicted 
#|   proportion of USAID aid allocated to domestic NGOs in a typical country"

# Put the shared y-axis label in a separate plot and add it to the combined plot
# https://stackoverflow.com/a/66778622/120898
p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, angle = 90, size = 3.3, fontface = "bold",
           label = "Predicted proportion of\naid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(p_lab | 
    ((p1 | p2) / (p3 | p4) + 
       plot_layout(guides = "collect") + 
       plot_annotation(theme = theme(legend.position = "bottom")))) + 
  plot_layout(widths = c(0.05, 1))
```

```{r plot-cfx-predictions-defacto-dom, fig.width=7, fig.height=3.6}
#| out-width: 90%
#| fig-cap: "The effect of the de facto civil society legal environment on 
#|   predicted proportion of USAID aid channeled to domestic NGOs aid in a 
#|   typical country"
p1 <- m_recip_outcome_ccsi_dom$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_ccsi_dom$model_50,
                                 year_c = 0,
                                 v2xcs_ccsi = seq(0, 1, 0.1)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2xcs_ccsi, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = seq(0, 1, by = 0.25)) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Sunset[4],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Sunset[c(1, 2, 3)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.04)) +
  facet_wrap(vars("Core civil society index")) +
  theme_donors() +
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p2 <- m_recip_outcome_repress_dom$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_repress_dom$model_50,
                                 year_c = 0,
                                 v2csreprss = seq(-4, 3, 0.25)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2csreprss, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Sunset[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Sunset[c(4, 5, 6)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.04)) +
  facet_wrap(vars("Improvement in civil society repression")) +
  theme_donors() +
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, angle = 90, size = 3.3, fontface = "bold",
           label = "Predicted proportion of\naid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(p_lab | 
    ((p1 | p2) + 
       plot_layout(guides = "collect") + 
       plot_annotation(theme = theme(legend.position = "bottom")))) + 
  plot_layout(widths = c(0.05, 1))
```

#### Conditional marginal effects: Proportion of aid to domestic NGOs

```{r calc-cfx-mfx-all-dom}
mfx_total_stats_dom <- mfx_recip_cfx_single_dom$total %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_advocacy_stats_dom <- mfx_recip_cfx_single_dom$advocacy %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_entry_stats_dom <- mfx_recip_cfx_single_dom$entry %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_funding_stats_dom <- mfx_recip_cfx_single_dom$funding %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_ccsi_stats_dom <- mfx_recip_cfx_single_dom$ccsi %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_repress_stats_dom <- mfx_recip_cfx_single_dom$repress %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r build-cfx-mfx-combined-dom}
p1 <- mfx_recip_cfx_single_dom$total %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$PurpOr[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE < 0) = {pull(mfx_total_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$PurpOr[4], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier of any type")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p2 <- mfx_recip_cfx_single_dom$advocacy %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Teal[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_advocacy_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Teal[6], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to advocacy")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p3 <- mfx_recip_cfx_single_dom$entry %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Emrld[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_entry_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Emrld[6], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to entry")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p4 <- mfx_recip_cfx_single_dom$funding %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Peach[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE < 0) = {pull(mfx_funding_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Peach[4], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to funding")) +
  theme_donors() +
  theme(axis.text.y = element_blank())
```

```{r plot-cfx-mfx-combined-dom, fig.width=7, fig.height=5.2}
#| out-width: 90%
#| fig-cap: "The effect of one additional de jure anti-NGO legal barrier on 
#|   foreign aid in a typical country"
p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, size = 3.3, fontface = "bold",
           label = "Conditional effect of treatment on proportion\nof aid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(((p1 | p2) / (p3 | p4)) / p_lab) + 
  plot_layout(heights = c(1, 1, 0.1)) +
  plot_annotation(caption = "Point shows median value;\nthick bar = 80% credible interval; thin bar = 95% credible interval")
```

```{r plot-cfx-mfx-defacto-dom, fig.width=7, fig.height=3.6}
#| out-width: 90%
#| fig-cap: "The effect of changes in the de facto civil society legal 
#|   environment on predicted proportion of contentious aid in a typical 
#|   country"
p1 <- mfx_recip_cfx_single_dom$ccsi %>% 
  posteriordraws() %>% 
  mutate(draw = draw / 10) %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Sunset[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_ccsi_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Sunset[3], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("A 0.1 unit increase in\nthe core civil society index")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p2 <- mfx_recip_cfx_single_dom$repress %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x > 0)),
               fill = clrs$Sunset[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_repress_stats_dom, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Sunset[3], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("A 1 unit increase (improvement) in\nthe civil society repression score")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, size = 3.3, fontface = "bold",
           label = "Conditional effect of treatment on proportion\nof aid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

((p1 | p2) / p_lab) + 
  plot_layout(heights = c(1, 0.15)) +
  plot_annotation(caption = "Point shows median value;\nthick bar = 80% credible interval; thin bar = 95% credible interval")
```

#### Predictions: Proportion of aid to foreign NGOs

```{r build-cfx-predictions-combined-foreign}
ci_cols <- c("grey70", "grey45", "grey20")

p1 <- m_recip_outcome_total_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_total_foreign$model,
                                 year_c = 0,
                                 barriers_total = seq(0, 10, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = barriers_total, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = seq(0, 10, by = 2)) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$PurpOr[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$PurpOr[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0.15, 0.42)) +
  facet_wrap(vars("Total barriers")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p2 <- m_recip_outcome_advocacy_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_advocacy_foreign$model,
                                 year_c = 0,
                                 advocacy = seq(0, 2, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = advocacy, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:2) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Teal[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Teal[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0.15, 0.42)) +
  facet_wrap(vars("Barriers to advocacy")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p3 <- m_recip_outcome_entry_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_entry_foreign$model,
                                 year_c = 0,
                                 entry = seq(0, 3, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = entry, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:3) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Emrld[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Emrld[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0.15, 0.42)) +
  facet_wrap(vars("Barriers to entry")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p4 <- m_recip_outcome_funding_foreign$model %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_funding_foreign$model,
                                 year_c = 0,
                                 funding = seq(0, 4, 1)),
              re_formula = NA) %>% 
  ggplot(aes(x = funding, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = 0:4) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Peach[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Peach[c(1, 3, 5)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0.15, 0.42)) +
  facet_wrap(vars("Barriers to funding")) +
  theme_donors() + 
  theme(legend.margin = margin(l = 7.5, r = 7.5))
```

```{r plot-cfx-predictions-combined-foreign, fig.width=7, fig.height=5}
#| out-width: 90%
#| fig-cap: "The effect of de jure anti-NGO legal barriers on predicted 
#|   proportion of USAID aid allocated to domestic NGOs in a typical country"

# Put the shared y-axis label in a separate plot and add it to the combined plot
# https://stackoverflow.com/a/66778622/120898
p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, angle = 90, size = 3.3, fontface = "bold",
           label = "Predicted proportion of\naid to foreign NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(p_lab | 
    ((p1 | p2) / (p3 | p4) + 
       plot_layout(guides = "collect") + 
       plot_annotation(theme = theme(legend.position = "bottom")))) + 
  plot_layout(widths = c(0.05, 1))
```

```{r plot-cfx-predictions-defacto-foreign, fig.width=7, fig.height=3.6}
#| out-width: 90%
#| fig-cap: "The effect of the de facto civil society legal environment on 
#|   predicted proportion of USAID aid channeled to foreign NGOs aid in a 
#|   typical country"
p1 <- m_recip_outcome_ccsi_foreign$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_ccsi_foreign$model_50,
                                 year_c = 0,
                                 v2xcs_ccsi = seq(0, 1, 0.1)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2xcs_ccsi, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_x_continuous(breaks = seq(0, 1, by = 0.25)) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Sunset[4],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Sunset[c(1, 2, 3)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.6)) +
  facet_wrap(vars("Core civil society index")) +
  theme_donors() +
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p2 <- m_recip_outcome_repress_foreign$model_50 %>% 
  epred_draws(newdata = datagrid(model = m_recip_outcome_repress_foreign$model_50,
                                 year_c = 0,
                                 v2csreprss = seq(-4, 3, 0.25)),
              re_formula = NA) %>% 
  ggplot(aes(x = v2csreprss, y = .epred)) +
  stat_lineribbon(aes(color = "Posterior median"), 
                  alpha = 0.6, point_interval = median_hdci) +
  scale_y_continuous(labels = label_percent(accuracy = 1)) +
  scale_color_manual(
    values = clrs$Sunset[7],
    guide = guide_legend(order = 1, 
                         override.aes = list(fill = NA, alpha = 1, color = "black"))
  ) +
  scale_fill_manual(
    values = clrs$Sunset[c(4, 5, 6)], 
    labels = function(x) label_percent()(as.numeric(x)),
    guide = guide_legend(order = 2, 
                         override.aes = list(color = NA, fill = ci_cols))
  ) +
  labs(x = NULL, y = NULL, color = NULL, fill = "Credible interval (HPDI):") +
  coord_cartesian(ylim = c(0, 0.6)) +
  facet_wrap(vars("Improvement in civil society repression")) +
  theme_donors() +
  theme(legend.margin = margin(l = 7.5, r = 7.5))

p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, angle = 90, size = 3.3, fontface = "bold",
           label = "Predicted proportion of\naid to foreign NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(p_lab | 
    ((p1 | p2) + 
       plot_layout(guides = "collect") + 
       plot_annotation(theme = theme(legend.position = "bottom")))) + 
  plot_layout(widths = c(0.05, 1))
```


#### Conditional marginal effects: Proportion of aid to foreign NGOs

```{r calc-cfx-mfx-all-foreign}
mfx_total_stats_foreign <- mfx_recip_cfx_single_foreign$total %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_advocacy_stats_foreign <- mfx_recip_cfx_single_foreign$advocacy %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_entry_stats_foreign <- mfx_recip_cfx_single_foreign$entry %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_funding_stats_foreign <- mfx_recip_cfx_single_foreign$funding %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_ccsi_stats_foreign <- mfx_recip_cfx_single_foreign$ccsi %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))

mfx_repress_stats_foreign <- mfx_recip_cfx_single_foreign$repress %>% 
  posteriordraws() %>% 
  summarize(pd = sum(draw < 0) / n(),
            mad = mad(draw),
            med_hdci = median_hdci(draw)) %>% 
  unnest(med_hdci) %>% 
  mutate(pd_short = round(pd, 2))
```

```{r build-cfx-mfx-combined-foreign}
p1 <- mfx_recip_cfx_single_foreign$total %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$PurpOr[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE < 0) = {pull(mfx_total_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$PurpOr[4], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier of any type")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p2 <- mfx_recip_cfx_single_foreign$advocacy %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Teal[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_advocacy_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Teal[6], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to advocacy")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p3 <- mfx_recip_cfx_single_foreign$entry %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Emrld[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_entry_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Emrld[6], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to entry")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p4 <- mfx_recip_cfx_single_foreign$funding %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Peach[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE < 0) = {pull(mfx_funding_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Peach[4], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("One additional barrier to funding")) +
  theme_donors() +
  theme(axis.text.y = element_blank())
```

```{r plot-cfx-mfx-combined-foreign, fig.width=7, fig.height=5.2}
#| out-width: 90%
#| fig-cap: "The effect of one additional de jure anti-NGO legal barrier on 
#|   foreign aid in a typical country"
p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, size = 3.3, fontface = "bold",
           label = "Conditional effect of treatment on proportion\nof aid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

(((p1 | p2) / (p3 | p4)) / p_lab) + 
  plot_layout(heights = c(1, 1, 0.1)) +
  plot_annotation(caption = "Point shows median value;\nthick bar = 80% credible interval; thin bar = 95% credible interval")
```

```{r plot-cfx-mfx-defacto-foreign, fig.width=7, fig.height=3.6}
#| out-width: 90%
#| fig-cap: "The effect of changes in the de facto civil society legal 
#|   environment on predicted proportion of contentious aid in a typical 
#|   country"
p1 <- mfx_recip_cfx_single_foreign$ccsi %>% 
  posteriordraws() %>% 
  mutate(draw = draw / 10) %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x < 0)),
               fill = clrs$Sunset[4], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_ccsi_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Sunset[3], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("A 0.1 unit increase in\nthe core civil society index")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p2 <- mfx_recip_cfx_single_foreign$repress %>% 
  posteriordraws() %>% 
  ggplot(aes(x = draw)) +
  stat_halfeye(aes(fill_ramp = after_stat(x > 0)),
               fill = clrs$Sunset[6], .width = c(0.8, 0.95),
               point_interval = median_hdci) +
  geom_vline(xintercept = 0, linewidth = 0.25) +
  annotate(geom = "richtext", label = glue("P(ATE > 0) = {1 - pull(mfx_repress_stats_foreign, pd_short)}"),
           x = Inf, y = Inf, hjust = 1, vjust = 1, size = 3,
           label.color = NA, label.margin = unit(rep(0.5, 4), "lines")) +
  scale_x_continuous(labels = label_number(scale = 100, suffix = " pp.",
                                           style_negative = "minus")) +
  scale_fill_ramp_discrete(from = clrs$Sunset[3], guide = "none") +
  labs(x = NULL, y = NULL, fill = NULL) +
  facet_wrap(vars("A 1 unit increase (improvement) in\nthe civil society repression score")) +
  theme_donors() +
  theme(axis.text.y = element_blank())

p_lab <- ggplot() + 
  annotate(geom = "text", x = 1, y = 1, size = 3.3, fontface = "bold",
           label = "Conditional effect of treatment on proportion\nof aid to domestic NGOs in the following year") +
  coord_cartesian(clip = "off") +
  theme_void()

((p1 | p2) / p_lab) + 
  plot_layout(heights = c(1, 0.15)) +
  plot_annotation(caption = "Point shows median value;\nthick bar = 80% credible interval; thin bar = 95% credible interval")
```


#### Table

With H~1~ we had to convert the dollar-scale treatment effects into percent changes to make them more interpretable, since we were working with millions of dollars. With this outcome, though, we're just working with a 0–100% range, so we can stick with percentage point-scale effects. 

```{r cfx-mfx-results-table}
signif_pp <- label_number(accuracy = 0.01, scale = 100, suffix = " pp.",
                          style_negative = "minus")

mfx_lookup <- tribble(
  ~term, ~Treatment,
  "barriers_total", "One additional barrier of any type",
  "advocacy", "One additional barrier to advocacy",
  "entry", "One additional barrier to entry",
  "funding", "One additional barrier to funding",
  "v2xcs_ccsi", "A 0.1 unit increase (improvement) in the core civil society index",
  "v2csreprss", "A 1 unit increase (improvement) in civil society repression"
) %>% 
  mutate(Treatment = fct_inorder(Treatment))

mfx_all_posteriors_dom <- bind_rows(
  posteriordraws(mfx_recip_cfx_single_dom$total), 
  posteriordraws(mfx_recip_cfx_single_dom$advocacy), 
  posteriordraws(mfx_recip_cfx_single_dom$entry), 
  posteriordraws(mfx_recip_cfx_single_dom$funding),
  posteriordraws(mfx_recip_cfx_single_dom$ccsi) %>% mutate(draw = draw / 10),
  posteriordraws(mfx_recip_cfx_single_dom$repress)) %>% 
  mutate(id = "domestic")

mfx_all_posteriors_foreign <- bind_rows(
  posteriordraws(mfx_recip_cfx_single_foreign$total), 
  posteriordraws(mfx_recip_cfx_single_foreign$advocacy), 
  posteriordraws(mfx_recip_cfx_single_foreign$entry), 
  posteriordraws(mfx_recip_cfx_single_foreign$funding),
  posteriordraws(mfx_recip_cfx_single_foreign$ccsi) %>% mutate(draw = draw / 10),
  posteriordraws(mfx_recip_cfx_single_foreign$repress)) %>% 
  mutate(id = "foreign")

mfx_all_posteriors <- bind_rows(mfx_all_posteriors_dom,
                                mfx_all_posteriors_foreign)

mfx_pct_pt <- mfx_all_posteriors %>% 
  group_by(id, term) %>% 
  median_hdci(draw) %>%
  mutate(across(c(draw, .lower, .upper), ~signif_pp(.))) %>% 
  mutate(interval = glue("[{.lower}, {.upper}]")) %>% 
  select(id, term, draw, interval) %>% 
  pivot_longer(c(draw, interval), values_to = "ate") %>% 
  select(-name) %>% 
  group_by(id, term) %>% 
  mutate(row_num = row_number()) %>% 
  ungroup() %>% 
  pivot_wider(names_from = id, values_from = ate)

mfx_p_direction <- mfx_all_posteriors %>% 
  group_by(id, term) %>% 
  summarize(lt0 = round(sum(draw < 0) / n(), 2),
            gt0 = round(sum(draw > 0) / n(), 2)) %>% 
  mutate(row_num = 1) %>% 
  ungroup() %>% 
  pivot_wider(names_from = id, values_from = c(lt0, gt0))

mfx_pct_pt %>% 
  left_join(mfx_p_direction, by = c("term", "row_num")) %>% 
  left_join(mfx_lookup, by = "term") %>% 
  arrange(Treatment) %>% 
  mutate(Treatment = ifelse(row_num == 1, as.character(Treatment), NA)) %>% 
  select(Treatment, domestic, lt0_domestic, gt0_domestic, foreign, lt0_foreign, gt0_foreign) %>% 
  kbl(align = c("l", "c", "c", "c", "c", "c", "c"),
      col.names = c("Treatment", "ATE", "p < 0", "p > 0", "ATE", "p < 0", "p > 0")) %>% 
  add_header_above(c(" " = 1, "% of USAID aid to domestic NGOs" = 3, "% of USAID aid to foreign NGOs" = 3)) %>% 
  kable_styling(htmltable_class = "table table-sm light-border") %>% 
  footnote(general = c("Reported values are posterior median conditional effects, multiplied by 100 to show percentage point changes.", 
                       "95% HPDI intervals shown in brackets."),
           footnote_as_chunk = TRUE)
```



### Within- and between-country variability (φ and σs)

```{r extract-sigmas-total, include=FALSE, warning=FALSE}
zi_coefs <- m_recip_outcome_total_dom$model %>% 
  tidy(effects = "fixed") %>% 
  mutate(term = janitor::make_clean_names(term)) %>% 
  mutate(across(c(estimate, conf.low, conf.high), list(exp = ~exp(.)))) %>% 
  split(~term)

sigmas_zi <- m_recip_outcome_total_dom$model %>% 
  tidy(parameters = c("sd_*", "phi")) %>% 
  select(-component) %>% 
  mutate(term = janitor::make_clean_names(term)) %>% 
  split(~term)

zimuint <- plogis(zi_coefs$intercept$estimate)
ziphi <- exp(sigmas_zi$phi$estimate)
```

The $\phi$ and $\sigma$ terms are roughly the same across all these different models, so we'll just show the results from the total barriers + domestic NGOs model here. We have three uncertainty-related terms to work with:

- $\phi_y$ (`phi`): the precision or variance of aid contentiousness within countries. On the log scale, it's `r round(sigmas_zi$phi$estimate, 2)`, which is `r label_comma()(exp(sigmas_zi$phi$estimate))` when unlogged or exponentiated, which is incredibly precise. That gives us a posterior distribution of the non-zero-inflated part of the model of $\operatorname{Beta}(`r zimuint`, `r round(ziphi, 0)`)$ which looks like this, very narrowly focused around the baseline average 2000 proportion:

```{r plot-zi-phi, warning=FALSE, indent="  "}
#| out-width: 70%
beta_params <- m_recip_outcome_total_dom$model %>% 
  tidy(parameters = c("b_(Intercept)", "phi"))

beta_mu <- beta_params %>% 
  filter(term == "b_(Intercept)") %>% 
  pull(estimate)

beta_phi <- beta_params %>% 
  filter(term == "phi") %>% 
  pull(estimate)

ggplot() +
  stat_function(geom = "area", fill = clrs$Prism[7],
                fun = ~dprop(., mean = plogis(beta_mu), size = exp(beta_phi))) +
  scale_x_continuous(labels = label_percent(), limits = c(0.0425, 0.0437)) +
  labs(title = "Distribution of non-zero-inflated contentious aid in 2000",
       subtitle = glue::glue("Beta(µ = plogis({round(beta_mu, 2)}), φ = exp({round(beta_phi, 2)})) or Beta(µ = {round(plogis(beta_mu), 3)}, φ = {round(exp(beta_phi), 0)})")) +
  theme_donors()
```

- $\sigma_0$ (`sd__(Intercept)` for the `gwcode` group): the variability between countries' baseline averages, or the variability around the $b_{0_j}$ offsets. Here it's `r round(sigmas_zi$sd_gwcode_intercept$estimate, 2)`, which means that across or between countries, the proportion of contentious aid varies by 1.5ish logit units.

- $\sigma_3$ (`sd__year_c` for the `gwcode` group): the variability between countries' year effects, or the variability around the $b_{3_j}$ offsets. Here it's `r round(sigmas_zi$sd_gwcode_year_c$estimate, 2)`, which means that average year effects vary by 0.15ish logit units across or between countries.

```{r show-sigmas-zi, warning=FALSE}
#| code-fold: show
m_recip_outcome_total_dom$model %>% 
  tidy(parameters = c("sd_*", "phi")) %>% 
  select(-component)
```

### Full results table

Again, this is less important since we don't care about individual coefficients and instead care about conditional effects, but for the sake of full transparency (and to placate future reviewers), here's a table of all the results:

::: {.panel-tabset}
#### % of aid to domestic NGO recipients

```{r tbl-h3-outcome-dom, warning=FALSE}
#| tbl-cap: Results from all outcome models
models_tbl_h3_outcome_dejure_dom <- models_tbl_h3_outcome_dejure_dom %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals (HDPI) in brackets.", 
  "Total \\(R^2\\) considers the variance of both population and group effects;", 
  "marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_outcome_dejure_dom,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = outcome_rows,
             coef_map = coefs_outcome,
             gof_map = gofs,
             output = "kableExtra",
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2)) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border") %>% 
  footnote(general = notes, footnote_as_chunk = TRUE)
```

#### % of aid to foreign NGO recipients

```{r tbl-h3-outcome-foreign, warning=FALSE}
#| tbl-cap: Results from all outcome models
models_tbl_h3_outcome_dejure_foreign <- models_tbl_h3_outcome_dejure_foreign %>% 
  set_names(1:length(.))

notes <- c(
  "Posterior medians; 95% credible intervals (HDPI) in brackets.", 
  "Total \\(R^2\\) considers the variance of both population and group effects;", 
  "marginal \\(R^2\\) only takes population effects into account"
)

modelsummary(models_tbl_h3_outcome_dejure_foreign,
             estimate = "{estimate}",
             statistic = "[{conf.low}, {conf.high}]",
             add_rows = outcome_rows,
             coef_map = coefs_outcome,
             gof_map = gofs,
             output = "kableExtra",
             fmt =  list(estimate = 2, conf.low = 2, conf.high = 2)) %>% 
  row_spec(1, bold = TRUE) %>% 
  kable_styling(htmltable_class = "table-sm light-border") %>% 
  footnote(general = notes, footnote_as_chunk = TRUE)
```

:::
