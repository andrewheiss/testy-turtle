---
title: "Model details"
author: "Suparna Chaudhry and Andrew Heiss"
date-modified: "`r format(Sys.time(), '%F')`"
---

```{r setup, include=FALSE}
options(dplyr.summarise.inform = FALSE,
        knitr.kable.NA = "")
```

```{r load-libraries-data, warning=FALSE, message=FALSE}
library(tidyverse)
library(targets)
library(brms)
library(glue)
library(kableExtra)
library(lubridate)
library(here)

tar_config_set(store = here::here('_targets'),
               script = here::here('_targets.R'))

# Treatment models
tar_load(c(m_oda_treatment_total, m_oda_treatment_advocacy, 
           m_oda_treatment_entry, m_oda_treatment_funding, 
           m_oda_treatment_ccsi, m_oda_treatment_repress))
tar_load(c(m_purpose_treatment_total, m_purpose_treatment_advocacy,
           m_purpose_treatment_entry, m_purpose_treatment_funding,
           m_purpose_treatment_ccsi, m_purpose_treatment_repress))
tar_load(c(m_recip_treatment_total_dom, m_recip_treatment_advocacy_dom,
           m_recip_treatment_entry_dom, m_recip_treatment_funding_dom,
           m_recip_treatment_ccsi_dom, m_recip_treatment_repress_dom))
tar_load(c(m_recip_treatment_total_foreign, m_recip_treatment_advocacy_foreign,
           m_recip_treatment_entry_foreign, m_recip_treatment_funding_foreign,
           m_recip_treatment_ccsi_foreign, m_recip_treatment_repress_foreign))

# Outcome models
tar_load(c(m_oda_outcome_total, m_oda_outcome_advocacy, 
           m_oda_outcome_entry, m_oda_outcome_funding,
           m_oda_outcome_ccsi, m_oda_outcome_repress))
tar_load(c(m_purpose_outcome_total, m_purpose_outcome_advocacy,
           m_purpose_outcome_entry, m_purpose_outcome_funding,
           m_purpose_outcome_ccsi, m_purpose_outcome_repress))
tar_load(c(m_recip_outcome_total_dom, m_recip_outcome_advocacy_dom,
           m_recip_outcome_entry_dom, m_recip_outcome_funding_dom,
           m_recip_outcome_ccsi_dom, m_recip_outcome_repress_dom))
tar_load(c(m_recip_outcome_total_foreign, m_recip_outcome_advocacy_foreign,
           m_recip_outcome_entry_foreign, m_recip_outcome_funding_foreign,
           m_recip_outcome_ccsi_foreign, m_recip_outcome_repress_foreign))
```

```{r running-time-oda, include=FALSE}
model_df_h1 <- tribble(
  ~model, ~slot, ~treatment_var, ~stage, ~details,
  "m_oda_treatment_total", "model_num", "Total barriers", "Treatment", "Numerator",
  "m_oda_treatment_total", "model_denom", "Total barriers", "Treatment", "Denominator",
  "m_oda_outcome_total", "model", "Total barriers", "Outcome", "",
  
  "m_oda_treatment_advocacy", "model_num", "Barriers to advocacy", "Treatment", "Numerator",
  "m_oda_treatment_advocacy", "model_denom", "Barriers to advocacy", "Treatment", "Denominator",
  "m_oda_outcome_advocacy", "model", "Barriers to advocacy", "Outcome", "",
  
  "m_oda_treatment_entry", "model_num", "Barriers to entry", "Treatment", "Numerator",
  "m_oda_treatment_entry", "model_denom", "Barriers to entry", "Treatment", "Denominator",
  "m_oda_outcome_entry", "model", "Barriers to entry", "Outcome", "",
  
  "m_oda_treatment_funding", "model_num", "Barriers to funding", "Treatment", "Numerator",
  "m_oda_treatment_funding", "model_denom", "Barriers to funding", "Treatment", "Denominator",
  "m_oda_outcome_funding", "model", "Barriers to funding", "Outcome", "",
  
  "m_oda_treatment_ccsi", "model_num", "Civil society index", "Treatment", "Numerator",
  "m_oda_treatment_ccsi", "model_denom", "Civil society index", "Treatment", "Denominator",
  "m_oda_outcome_ccsi", "model_50", "Civil society index", "Outcome", "IPTW truncated at 50",
  "m_oda_outcome_ccsi", "model_500", "Civil society index", "Outcome", "IPTW truncated at 500",
  
  "m_oda_treatment_repress", "model_num", "Civil society repression", "Treatment", "Numerator",
  "m_oda_treatment_repress", "model_denom", "Civil society repression", "Treatment", "Denominator",
  "m_oda_outcome_repress", "model_50", "Civil society repression", "Outcome", "IPTW truncated at 50"
) %>% 
  mutate(model_nice = glue("<code>{model}${slot}</code>"))

models_h1 <- model_df_h1 %>% 
  mutate(actual_model = map2(model, slot, ~eval(rlang::sym(.x))[[.y]])) %>% 
  mutate(across(c(treatment_var, stage, details), ~fct_inorder(., ordered = TRUE))) %>% 
  mutate(duration = map(actual_model, ~rstan::get_elapsed_time(.$fit)),
         duration = map(duration, ~rownames_to_column(as_tibble(.)))) %>% 
  select(-actual_model) %>% 
  unnest(duration) %>% 
  group_by(Model = model_nice, Treatment = treatment_var, 
           Stage = stage, Details = details) %>% 
  summarize(`Total time (i.e. longest chain)` = as.duration(max(warmup + sample))) %>%
  ungroup() %>% 
  arrange(Treatment, Stage, Details)

total_row_h1 <- tibble(Treatment = "Total", 
                       `Total time (i.e. longest chain)` =
                         as.duration(sum(models_h1$`Total time (i.e. longest chain)`)))

model_time_h1 <- models_h1 %>% 
  bind_rows(total_row_h1)

model_time_h1 %>% 
  select(-Treatment) %>% 
  rename(` ` = Model) %>% 
  kbl(escape = FALSE) %>% 
  pack_rows(index = table(fct_inorder(model_time_h1$Treatment))) %>% 
  kable_styling(htmltable_class = "table table-sm")
```

```{r running-time-purpose, include=FALSE}
model_df_h2 <- tribble(
  ~model, ~slot, ~treatment_var, ~stage, ~details,
  "m_purpose_treatment_total", "model_num", "Total barriers", "Treatment", "Numerator",
  "m_purpose_treatment_total", "model_denom", "Total barriers", "Treatment", "Denominator",
  "m_purpose_outcome_total", "model", "Total barriers", "Outcome", "",
  
  "m_purpose_treatment_advocacy", "model_num", "Barriers to advocacy", "Treatment", "Numerator",
  "m_purpose_treatment_advocacy", "model_denom", "Barriers to advocacy", "Treatment", "Denominator",
  "m_purpose_outcome_advocacy", "model", "Barriers to advocacy", "Outcome", "",
  
  "m_purpose_treatment_entry", "model_num", "Barriers to entry", "Treatment", "Numerator",
  "m_purpose_treatment_entry", "model_denom", "Barriers to entry", "Treatment", "Denominator",
  "m_purpose_outcome_entry", "model", "Barriers to entry", "Outcome", "",
  
  "m_purpose_treatment_funding", "model_num", "Barriers to funding", "Treatment", "Numerator",
  "m_purpose_treatment_funding", "model_denom", "Barriers to funding", "Treatment", "Denominator",
  "m_purpose_outcome_funding", "model", "Barriers to funding", "Outcome", "",
  
  "m_purpose_treatment_ccsi", "model_num", "Civil society index", "Treatment", "Numerator",
  "m_purpose_treatment_ccsi", "model_denom", "Civil society index", "Treatment", "Denominator",
  "m_purpose_outcome_ccsi", "model_50", "Civil society index", "Outcome", "IPTW truncated at 50",
  
  "m_purpose_treatment_repress", "model_num", "Civil society repression", "Treatment", "Numerator",
  "m_purpose_treatment_repress", "model_denom", "Civil society repression", "Treatment", "Denominator",
  "m_purpose_outcome_repress", "model_50", "Civil society repression", "Outcome", "IPTW truncated at 50"
) %>% 
  mutate(model_nice = glue("<code>{model}${slot}</code>"))

models_h2 <- model_df_h2 %>% 
  mutate(actual_model = map2(model, slot, ~eval(rlang::sym(.x))[[.y]])) %>% 
  mutate(across(c(treatment_var, stage, details), ~fct_inorder(., ordered = TRUE))) %>% 
  mutate(duration = map(actual_model, ~rstan::get_elapsed_time(.$fit)),
         duration = map(duration, ~rownames_to_column(as_tibble(.)))) %>% 
  select(-actual_model) %>% 
  unnest(duration) %>% 
  group_by(Model = model_nice, Treatment = treatment_var, 
           Stage = stage, Details = details) %>% 
  summarize(`Total time (i.e. longest chain)` = as.duration(max(warmup + sample))) %>%
  ungroup() %>% 
  arrange(Treatment, Stage, Details)

total_row_h2 <- tibble(Treatment = "Total", 
                       `Total time (i.e. longest chain)` =
                         as.duration(sum(models_h2$`Total time (i.e. longest chain)`)))

model_time_h2 <- models_h2 %>% 
  bind_rows(total_row_h2)

model_time_h2 %>% 
  select(-Treatment) %>% 
  rename(` ` = Model) %>% 
  kbl(escape = FALSE) %>% 
  pack_rows(index = table(fct_inorder(model_time_h2$Treatment))) %>% 
  kable_styling(htmltable_class = "table table-sm")
```

```{r running-time-recipient-dom, include=FALSE}
model_df_h3_dom <- tribble(
  ~model, ~slot, ~treatment_var, ~stage, ~details,
  "m_recip_treatment_total_dom", "model_num", "Total barriers", "Treatment", "Numerator",
  "m_recip_treatment_total_dom", "model_denom", "Total barriers", "Treatment", "Denominator",
  "m_recip_outcome_total_dom", "model", "Total barriers", "Outcome", "",
  
  "m_recip_treatment_advocacy_dom", "model_num", "Barriers to advocacy", "Treatment", "Numerator",
  "m_recip_treatment_advocacy_dom", "model_denom", "Barriers to advocacy", "Treatment", "Denominator",
  "m_recip_outcome_advocacy_dom", "model", "Barriers to advocacy", "Outcome", "",
  
  "m_recip_treatment_entry_dom", "model_num", "Barriers to entry", "Treatment", "Numerator",
  "m_recip_treatment_entry_dom", "model_denom", "Barriers to entry", "Treatment", "Denominator",
  "m_recip_outcome_entry_dom", "model", "Barriers to entry", "Outcome", "",
  
  "m_recip_treatment_funding_dom", "model_num", "Barriers to funding", "Treatment", "Numerator",
  "m_recip_treatment_funding_dom", "model_denom", "Barriers to funding", "Treatment", "Denominator",
  "m_recip_outcome_funding_dom", "model", "Barriers to funding", "Outcome", "",
  
  "m_recip_treatment_ccsi_dom", "model_num", "Civil society index", "Treatment", "Numerator",
  "m_recip_treatment_ccsi_dom", "model_denom", "Civil society index", "Treatment", "Denominator",
  "m_recip_outcome_ccsi_dom", "model_50", "Civil society index", "Outcome", "IPTW truncated at 50",
  
  "m_recip_treatment_repress_dom", "model_num", "Civil society repression", "Treatment", "Numerator",
  "m_recip_treatment_repress_dom", "model_denom", "Civil society repression", "Treatment", "Denominator",
  "m_recip_outcome_repress_dom", "model_50", "Civil society repression", "Outcome", "IPTW truncated at 50"
) %>% 
  mutate(model_nice = glue("<code>{model}${slot}</code>"))

models_h3_dom <- model_df_h3_dom %>% 
  mutate(actual_model = map2(model, slot, ~eval(rlang::sym(.x))[[.y]])) %>% 
  mutate(across(c(treatment_var, stage, details), ~fct_inorder(., ordered = TRUE))) %>% 
  mutate(duration = map(actual_model, ~rstan::get_elapsed_time(.$fit)),
         duration = map(duration, ~rownames_to_column(as_tibble(.)))) %>% 
  select(-actual_model) %>% 
  unnest(duration) %>% 
  group_by(Model = model_nice, Treatment = treatment_var, 
           Stage = stage, Details = details) %>% 
  summarize(`Total time (i.e. longest chain)` = as.duration(max(warmup + sample))) %>%
  ungroup() %>% 
  arrange(Treatment, Stage, Details)

total_row_h3_dom <- tibble(Treatment = "Total", 
                           `Total time (i.e. longest chain)` =
                             as.duration(sum(models_h3_dom$`Total time (i.e. longest chain)`)))

model_time_h3_dom <- models_h3_dom %>% 
  bind_rows(total_row_h3_dom)

model_time_h3_dom %>% 
  select(-Treatment) %>% 
  rename(` ` = Model) %>% 
  kbl(escape = FALSE) %>% 
  pack_rows(index = table(fct_inorder(model_time_h3_dom$Treatment))) %>% 
  kable_styling(htmltable_class = "table table-sm")
```

```{r running-time-recipient-foreign, include=FALSE}
model_df_h3_foreign <- tribble(
  ~model, ~slot, ~treatment_var, ~stage, ~details,
  "m_recip_treatment_total_foreign", "model_num", "Total barriers", "Treatment", "Numerator",
  "m_recip_treatment_total_foreign", "model_denom", "Total barriers", "Treatment", "Denominator",
  "m_recip_outcome_total_foreign", "model", "Total barriers", "Outcome", "",
  
  "m_recip_treatment_advocacy_foreign", "model_num", "Barriers to advocacy", "Treatment", "Numerator",
  "m_recip_treatment_advocacy_foreign", "model_denom", "Barriers to advocacy", "Treatment", "Denominator",
  "m_recip_outcome_advocacy_foreign", "model", "Barriers to advocacy", "Outcome", "",
  
  "m_recip_treatment_entry_foreign", "model_num", "Barriers to entry", "Treatment", "Numerator",
  "m_recip_treatment_entry_foreign", "model_denom", "Barriers to entry", "Treatment", "Denominator",
  "m_recip_outcome_entry_foreign", "model", "Barriers to entry", "Outcome", "",
  
  "m_recip_treatment_funding_foreign", "model_num", "Barriers to funding", "Treatment", "Numerator",
  "m_recip_treatment_funding_foreign", "model_denom", "Barriers to funding", "Treatment", "Denominator",
  "m_recip_outcome_funding_foreign", "model", "Barriers to funding", "Outcome", "",
  
  "m_recip_treatment_ccsi_foreign", "model_num", "Civil society index", "Treatment", "Numerator",
  "m_recip_treatment_ccsi_foreign", "model_denom", "Civil society index", "Treatment", "Denominator",
  "m_recip_outcome_ccsi_foreign", "model_50", "Civil society index", "Outcome", "IPTW truncated at 50",
  
  "m_recip_treatment_repress_foreign", "model_num", "Civil society repression", "Treatment", "Numerator",
  "m_recip_treatment_repress_foreign", "model_denom", "Civil society repression", "Treatment", "Denominator",
  "m_recip_outcome_repress_foreign", "model_50", "Civil society repression", "Outcome", "IPTW truncated at 50"
) %>% 
  mutate(model_nice = glue("<code>{model}${slot}</code>"))

models_h3_foreign <- model_df_h3_foreign %>% 
  mutate(actual_model = map2(model, slot, ~eval(rlang::sym(.x))[[.y]])) %>% 
  mutate(across(c(treatment_var, stage, details), ~fct_inorder(., ordered = TRUE))) %>% 
  mutate(duration = map(actual_model, ~rstan::get_elapsed_time(.$fit)),
         duration = map(duration, ~rownames_to_column(as_tibble(.)))) %>% 
  select(-actual_model) %>% 
  unnest(duration) %>% 
  group_by(Model = model_nice, Treatment = treatment_var, 
           Stage = stage, Details = details) %>% 
  summarize(`Total time (i.e. longest chain)` = as.duration(max(warmup + sample))) %>%
  ungroup() %>% 
  arrange(Treatment, Stage, Details)

total_row_h3_foreign <- tibble(Treatment = "Total", 
                               `Total time (i.e. longest chain)` =
                                 as.duration(sum(models_h3_foreign$`Total time (i.e. longest chain)`)))

model_time_h3_foreign <- models_h3_foreign %>% 
  bind_rows(total_row_h3_foreign)

model_time_h3_foreign %>% 
  select(-Treatment) %>% 
  rename(` ` = Model) %>% 
  kbl(escape = FALSE) %>% 
  pack_rows(index = table(fct_inorder(model_time_h3_foreign$Treatment))) %>% 
  kable_styling(htmltable_class = "table table-sm")
```

```{r set-computer-details, include=FALSE}
computer_details <- "2021 M1 MacBook Pro with 32 GB of RAM, with 4 MCMC chains spread across 8 cores, with two CPU threads per chain, using Stan through brms through cmdstanr"

model_time_all <- bind_rows(total_row_h1, total_row_h2, 
                            total_row_h3_dom, total_row_h3_foreign)

dur <- as.period(as.duration(sum(model_time_all$`Total time (i.e. longest chain)`)))

total_run_time <- glue("{hours} hours, {minutes} minutes, and {seconds} seconds",
                       hours = hour(dur), minutes = minute(dur), seconds = round(second(dur), 0))
```

We ran these models on a `r computer_details`. 

In total, it took `r total_run_time` to run everything.

# Model run times

## Models for H~1~ (total ODA)

```{r, ref.label="running-time-oda"}
```

## Models for H~2~ (aid contentiousness)

```{r, ref.label="running-time-purpose"}
```

## Models for H~3~ (aid recipients)

### Domestic NGOs

```{r, ref.label="running-time-recipient-foreign-dom"}
```

### Foreign NGOs

```{r, ref.label="running-time-recipient-foreign"}
```
