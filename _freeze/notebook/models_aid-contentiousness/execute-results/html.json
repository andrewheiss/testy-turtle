{
  "hash": "8e1c12f77d7c01c9bcc5499248413853",
  "result": {
    "markdown": "---\ntitle: \"H~2~: Effect of anti-NGO crackdown on aid contentiousness\"\nauthor: \"Suparna Chaudhry and Andrew Heiss\"\ndate: \"2022-12-07\"\nbibliography: \"/Users/andrew/Desktop/Crackdowns and aid/testy-turtle/manuscript/bibliography.bib\"\ncsl: \"/Users/andrew/Desktop/Crackdowns and aid/testy-turtle/manuscript/pandoc/csl/chicago-author-date.csl\"\nlink-citations: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(targets)\nlibrary(brms)\nlibrary(tidybayes)\nlibrary(bayesplot)\nlibrary(fixest)\nlibrary(broom)\nlibrary(broom.mixed)\nlibrary(modelsummary)\nlibrary(patchwork)\nlibrary(scales)\nlibrary(latex2exp)\nlibrary(kableExtra)\nlibrary(here)\n\ncolor_scheme_set(\"viridisC\")\n\nmy_seed <- 1234\nset.seed(my_seed)\n\n# Stuff from targets\n# Plotting functions\ninvisible(list2env(tar_read(graphic_functions), .GlobalEnv))\ninvisible(list2env(tar_read(misc_funs), .GlobalEnv))\n\n# Data\ndf_country_aid <- tar_read(country_aid_final)\ndf_country_aid_laws <- filter(df_country_aid, laws)\n\n# Treatment models\ntar_load(c(m_purpose_treatment_total, m_purpose_treatment_advocacy, \n           m_purpose_treatment_entry, m_purpose_treatment_funding, \n           m_purpose_treatment_ccsi))\n\n# IPTW data\ntar_load(c(df_purpose_iptw_total, df_purpose_iptw_advocacy, \n           df_purpose_iptw_entry, df_purpose_iptw_funding,\n           df_purpose_iptw_ccsi))\n\n# Outcome models\ntar_load(c(m_purpose_outcome_total, m_purpose_outcome_advocacy, \n           m_purpose_outcome_entry, m_purpose_outcome_funding,\n           m_purpose_outcome_ccsi))\n\n# Results tables\n# tar_load(c(models_tbl_h2_treatment_num, models_tbl_h2_treatment_denom))\n# tar_load(c(models_tbl_h2_outcome_dejure, models_tbl_h2_outcome_defacto))\n```\n:::\n\n\n## Weight models\n\n- Numerator is lagged treatment + non-varying confounders\n- Denominator is lagged treatment + lagged outcome + time-varying confounders + non-varying confounders\n\n$$\nsw = \\prod^t_{t = 1} \\frac{\\phi(T_{it} | T_{i, t-1}, C_i)}{\\phi(T_{it} | T_{i, t-1}, D_{i, t-1}, C_i)}\n$$\n\n### Priors for weight models\n\nWe use [generic weakly informative priors](https://mc-stan.org/users/documentation/case-studies/weakly_informative_shapes.html) for our model parameters:\n\n- Intercept: $\\mathcal{N} (0, 10)$\n- Coefficients: $\\mathcal{N} (0, 2.5)$\n- Sigma: $\\operatorname{Cauchy} (0, 1)$\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npri_int <- ggplot() +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 10),\n                geom = \"area\", fill = \"grey80\", color = \"black\") +\n  labs(x = TeX(\"\\\\textbf{Intercept (β_0)}\")) +\n  annotate(geom = \"label\", x = 0, y = 0.01, label = \"N(0, 10)\", size = pts(9)) +\n  xlim(-40, 40) +\n  theme_donors(prior = TRUE)\n## Warning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\n## ℹ Please use the `linewidth` argument instead.\n\npri_coef <- ggplot() +\n  stat_function(fun = dnorm, args = list(mean = 0, sd = 2.5),\n                geom = \"area\", fill = \"grey80\", color = \"black\") +\n  labs(x = TeX(\"\\\\textbf{Coefficients (β_x)}\")) +\n  annotate(geom = \"label\", x = 0, y = 0.04, label = \"N(0, 3)\", size = pts(9)) +\n  xlim(-10, 10) +\n  theme_donors(prior = TRUE)\n\npri_sigma <- ggplot() +\n  stat_function(fun = dcauchy, args = list(location = 0, scale = 1),\n                geom = \"area\", fill = \"grey80\", color = \"black\") +\n  labs(x = \"σ\") +\n  annotate(geom = \"label\", x = 5, y = 0.08, label = \"Cauchy(0, 1)\", size = pts(9)) +\n  xlim(0, 10) +\n  theme_donors(prior = TRUE)\n\n(pri_int + pri_coef + pri_sigma)\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/plot-weight-priors-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n### Check weight models\n\nWe check one of the denominator models for convergence and mixing and fit (not the numerator, since those models are the same as the ones in H1).\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npp_check(m_purpose_treatment_total$model_denom, type = \"dens_overlay\", nsamples = 10) +\n  theme_donors()\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-check-denominator-1.png){fig-align='center' width=85%}\n:::\n\n```{.r .cell-code}\n\nm_purpose_treatment_total$model_denom %>% \n  posterior_samples(add_chain = TRUE) %>% \n  select(-starts_with(\"r_gwcode\"), -starts_with(\"z_\"), -lp__, -iter) %>% \n  mcmc_trace() +\n  theme_donors() +\n  theme(legend.position = \"right\")\n## Warning: Method 'posterior_samples' is deprecated. Please see ?as_draws for recommended\n## alternatives.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-check-denominator-2.png){fig-align='center' width=85%}\n:::\n:::\n\n\n### Check weights {.tabset}\n\nIPTWs should generally have a mean of 1 and shouldn't be too incredibly high. \n\n#### Total ODA\n\nEh, some of these are high, but the mean and median are fine.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(df_purpose_iptw_total$iptw)\n##      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n##  0.008512  0.853026  0.970117  1.075933  1.062264 10.483318\n\ndf_purpose_iptw_total %>% \n  ggplot(aes(x = iptw)) +\n  geom_histogram(binwidth = 0.5, boundary = 0) +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/iptws-total-oda-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Advocacy\n\nGreat.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(df_purpose_iptw_advocacy$iptw)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n## 0.07645 0.91488 0.97404 1.01715 1.01609 9.23477\n\ndf_purpose_iptw_advocacy %>% \n  ggplot(aes(x = iptw)) +\n  geom_histogram(binwidth = 1, boundary = 0) +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/iptws-advocacy-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Entry\n\nGood.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(df_purpose_iptw_entry$iptw)\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n##  0.1493  0.9060  0.9907  1.0317  1.0547  4.8246\n\ndf_purpose_iptw_entry %>% \n  ggplot(aes(x = iptw)) +\n  geom_histogram(binwidth = 0.5, boundary = 0) +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/iptws-entry-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Funding\n\nSome high values again, but only a handful, and the median and mean are great.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(df_purpose_iptw_funding$iptw)\n##      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n##  0.001193  0.861923  0.954473  1.080676  1.013495 18.229497\n\ndf_purpose_iptw_funding %>% \n  ggplot(aes(x = iptw)) +\n  geom_histogram(binwidth = 1, boundary = 0) +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/iptws-funding-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Core civil society index\n\nhahaha oh no:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsummary(df_purpose_iptw_ccsi$iptw)\n##      Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n## 0.000e+00 0.000e+00 0.000e+00 2.410e+10 1.000e+00 8.116e+12\n```\n:::\n\n\nWe truncate at four different thresholds: 100, 500, 1,000, and 5,000:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_iptw_ccsi <- bind_rows(\n  df_purpose_iptw_ccsi %>% mutate(threshold = 100, iptw = ifelse(iptw > 100, 100, iptw)),\n  df_purpose_iptw_ccsi %>% mutate(threshold = 500, iptw = ifelse(iptw > 500, 500, iptw)),\n  df_purpose_iptw_ccsi %>% mutate(threshold = 1000, iptw = ifelse(iptw > 1000, 1000, iptw)),\n  df_purpose_iptw_ccsi %>% mutate(threshold = 5000, iptw = ifelse(iptw > 5000, 5000, iptw))\n) %>% \n  mutate(threshold = paste0(\"Truncated at \", comma(threshold)),\n         threshold = fct_inorder(threshold))\n\nplot_iptw_ccsi %>% \n  ggplot(aes(x = iptw)) +\n  geom_histogram(bins = 50, boundary = 0) +\n  facet_wrap(vars(threshold), scales = \"free_x\") +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/iptws-ccsi-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n### Results {.tabset}\n\nThese are less important since we just use these treatment models to generate weights *and* because interpreting each coefficient when trying to isolate casual effects is unimportant and [a \"nuisance\"](https://arxiv.org/abs/2005.10314). But here are the results anyway:\n\n#### Numerator models\n\n\n::: {#tbl-h2-num .cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# model_names <- paste0(\"(\", 1:length(models_tbl_h2_treatment_num), \")\")\nmodel_names <- 1:length(models_tbl_h2_treatment_num)\nnames(models_tbl_h2_treatment_num) <- model_names\n\ntreatment_names <- c(\"Treatment\", \"Total barriers (t)\", \"Barriers to advocacy (t)\", \n                     \"Barriers to entry (t)\", \"Barriers to funding (t)\", \"CCSI (t)\")\ntreatment_rows <- as.data.frame(t(treatment_names))\nattr(treatment_rows, \"position\") <- 1\n\ncoef_list_num <- list(\n  \"b_barriers_total_lag1\" = \"Treatment (t − 1)\",\n  \"b_advocacy_lag1\" = \"Treatment (t − 1)\",\n  \"b_entry_lag1\" = \"Treatment (t − 1)\",\n  \"b_funding_lag1\" = \"Treatment (t − 1)\",\n  \"b_v2xcs_ccsi_lag1\" = \"Treatment (t − 1)\",\n  \"b_Intercept\" = \"Intercept\"\n)\n\nmodelsummary(models_tbl_h2_treatment_num,\n             statistic = \"[{conf.low}, {conf.high}]\",\n             coef_map = coef_list_num,\n             add_rows = treatment_rows,\n             gof_omit = \"ELPD\",\n             escape = FALSE,\n             notes = list(\"Posterior means; 95% credible intervals in brackets\"))\n```\n:::\n\n\n#### Denominator models\n\n\n::: {#tbl-h2-denom .cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# model_names <- paste0(\"(\", 1:length(models_tbl_h2_treatment_denom), \")\")\nmodel_names <- 1:length(models_tbl_h2_treatment_denom)\nnames(models_tbl_h2_treatment_denom) <- model_names\n\ntreatment_names <- c(\"Treatment\", \"Total barriers (t)\", \"Barriers to advocacy (t)\", \n                     \"Barriers to entry (t)\", \"Barriers to funding (t)\", \"CCSI (t)\")\ntreatment_rows <- as.data.frame(t(treatment_names))\nattr(treatment_rows, \"position\") <- 1\n\ncoef_list_denom <- list(\n  \"b_barriers_total_lag1\" = \"Treatment (t − 1)\",\n  \"b_advocacy_lag1\" = \"Treatment (t − 1)\",\n  \"b_entry_lag1\" = \"Treatment (t − 1)\",\n  \"b_funding_lag1\" = \"Treatment (t − 1)\",\n  \"b_v2xcs_ccsi_lag1\" = \"Treatment (t − 1)\",\n  \"b_v2x_polyarchy\" = \"Polyarchy\",\n  \"b_v2x_corr\" = \"Corruption index\",\n  \"b_v2x_rule\" = \"Rule of law index\",\n  \"b_v2x_civlib\" = \"Civil liberties index\",\n  \"b_v2x_clphy\" = \"Physical violence index\",\n  \"b_v2x_clpriv\" = \"Private civil liberties index\",\n  \"b_gdpcap_log\" = \"Log GDP/capita\",\n  \"b_un_trade_pct_gdp\" = \"Percent of GDP from trade\",\n  \"b_v2peedueq\" = \"Educational equality index\",\n  \"b_v2pehealth\" = \"Health equality index\",\n  \"b_e_peinfmor\" = \"Infant mortality rate\",\n  \"b_internal_conflict_past_5TRUE\" = \"Internal conflict in past 5 years\",\n  \"b_natural_dis_count\" = \"Count of natural disasters\",\n  \"b_Intercept\" = \"Intercept\"\n)\n\nmodelsummary(models_tbl_h2_treatment_denom,\n             statistic = \"[{conf.low}, {conf.high}]\",\n             coef_map = coef_list_denom,\n             add_rows = treatment_rows,\n             gof_omit = \"ELPD\",\n             escape = FALSE,\n             notes = list(\"Posterior means; 95% credible intervals in brackets\"))\n```\n:::\n\n\n\n## Outcome models\n\n### Modeling choice\n\nOur dependent variable for this hypothesis is the percentage of ODA allocated for contentious purposes, again leaded by one year. We classify contentious aid as any project focused on government and civil society (DAC codes 150 and 151) or conflict prevention and resolution, peace and security (DAC code 152).\n\nWorking with proportion data, however, poses interesting mathematical and methodological challenges, since the range of possible outcomes is limited to a value between 0 and 1. Treating proportion variables in a mixed model is technically possible, but it yields predictions that go beyond the allowable range of values (1.13, -0.5, etc.). Treating the proportion as a binomial variable is also possible and is indeed [one of the ways to use the `glm()` function](http://stackoverflow.com/a/9111904/120898) in R. However, this entails considering the proportion as a ratio of success and failures. In this case, treating a dollar of contentious aid as a success feels off, especially since aid amounts aren't independent events—it's not like each dollar of aid goes through a probabalistic process like a coin flip. \n\nAnother solution is to use [beta regression](https://cran.r-project.org/package=betareg), which [constrains the outcome variable to values between 0 and 1](http://www.theanalysisfactor.com/zero-one-inflated-beta-models-for-proportion-data/), but unfortunately does not allow for values of exactly 0 or 1. Zero-and-one inflated beta regression models, however, make adjustments for this and model the probability of being 0, being 1, and being somewhere in the middle using different processes. Matti Vuorre has [an excellent overview of ZOIB models here](https://vuorre.netlify.app/post/2019/02/18/analyze-analog-scale-ratings-with-zero-one-inflated-beta-models/).\n\nHowever, as we found with [our hurdling dilemma with H~1~](03_h1-total-aid.html#Modeling_choices), while it's possible to fit a zero-inflated model (or even zero-one-inflated model), it would require separate model specifications for different parts (the zero part, the one part, and the non-zero-one parts), leaving us with three different pseudo-treatment effects, only one of which (the non-zero-one part) weighted with the IPTW, and thus adjusted with do-calculus logic.\n\n[One recommendation by Ben Bolker](https://stat.ethz.ch/pipermail/r-sig-mixed-models/2011q1/015422.html), the maintainer of [`lme4`](https://cran.r-project.org/package=lme4), is to use a logit transformation of the dependent variable in `lmer()` models. This seems to be [standard practice in political science research](https://acrowinghen.com/2014/04/24/interpreting-coefficients-from-a-logit-linear-model-with-a-proportional-dependent-variable/), too. Logit transformations still can't handle values of exactly 0 or 1, though, but it's possible to [winsorize](https://en.wikipedia.org/wiki/Winsorizing) those values by adding or subtracting 0.001 to the extremes. [Stata has a guide](https://www.stata.com/support/faqs/statistics/logit-transformation/) about how to do this too.\n\nWe thus use logit-linear models of the ratio of contentious aid to non-contentious aid, like this: \n\n$$\\log \\left( \\frac{\\text{Contentious aid}}{\\text{Noncontentious aid}} \\right)_{i, t+1}$$\n\nThat means that we're comparing the ratio of contentious aid to non-contentious aid rather than the direct percent of contentious aid, and it makes for some acrobatic interpretations, but at least the results are interpretable.\n\n### Interpreting outcome models\n\nTODO\n\n\n### Priors for outcome models\n\nHere's the full specification for the models and all priors:\n\n$$\n\\begin{aligned}\n\\log \\left(\\frac{\\text{Contentious aid}}{\\text{Noncontentious aid}} \\right)_{i, t} &\\sim \\text{IPTW}_{i, t-1} \\times \\mathcal{N} (\\mu_{i, t}, \\sigma_m) & \\text{[likelihood]}\\\\\n\\mu_{i, t} &\\sim \\alpha_{\\text{country}[i]} + \\delta_{\\text{year}[k]} + \\beta\\ \\text{Law}_{i, t-1} & \\text{[marginal structural model]}\\\\\n\\alpha_j &\\sim \\mathcal{N} (\\bar{\\alpha}, \\sigma_{\\alpha}) \\text{, for } j \\text{ in } 1 .. J & \\text{[country-specific intercepts]} \\\\\n\\delta_j &\\sim \\mathcal{N} (0, \\sigma_{\\delta}) \\text{, for } j \\text{ in } 1 .. J & \\text{[year-specific intercepts]} \\\\\n\\ \\\\\n\\bar{\\alpha} &\\sim \\mathcal{N} (0, 20) & \\text{[prior population intercept]} \\\\\n\\beta &\\sim \\mathcal{N} (0, 3) & \\text{[prior population effects]} \\\\\n\\sigma_m, \\sigma_{\\alpha}, \\sigma_{\\delta} &\\sim \\operatorname{Cauchy}(0, 1) & \\text{[prior sd for errors]}\n\\end{aligned}\n$$\n\n### Check outcome models\n\nThe traceplots all look fine. Here's one as an example:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nm_purpose_outcome_total %>% \n  posterior_samples(add_chain = TRUE) %>% \n  select(-starts_with(\"r_gwcode\"), -starts_with(\"z_\"), -starts_with(\"r_year\"), -lp__, -iter) %>% \n  mcmc_trace() +\n  theme_donors()\n## Warning: Method 'posterior_samples' is deprecated. Please see ?as_draws for recommended\n## alternatives.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-check-outcome-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n### Results {.tabset}\n\n#### ATE plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncoefs_nice <- tribble(\n  ~`.variable`, ~var_nice,\n  \"b_barriers_total\", \"Additional law, t - 1\",\n  \"b_advocacy\", \"Additional advocacy law, t - 1\",\n  \"b_entry\", \"Additional entry law, t - 1\",\n  \"b_funding\", \"Additional funding law, t - 1\",\n  \"b_v2xcs_ccsi\", \"Core civil society index, t - 1\"\n) %>% \n  mutate(var_nice = fct_inorder(var_nice))\n\nplot_total_data <- gather_draws(m_purpose_outcome_total, b_barriers_total)\nplot_advocacy_data <- gather_draws(m_purpose_outcome_advocacy, b_advocacy)\nplot_entry_data <- gather_draws(m_purpose_outcome_entry, b_entry)\nplot_funding_data <- gather_draws(m_purpose_outcome_funding, b_funding) \n\nplot_purpose_coefs <- bind_rows(plot_total_data, plot_advocacy_data,\n                                plot_entry_data, plot_funding_data) %>% \n  left_join(coefs_nice, by = \".variable\") %>% \n  mutate(.value = exp(.value))\n\nrope_sd <- exp(sd(df_purpose_iptw_total$prop_contentious_logit_lead1))\n\nplot_rope <- tibble(xmin = 1 + (-0.05 * rope_sd), \n                    xmax = 1 + (0.05 * rope_sd))\n\nggplot(plot_purpose_coefs, aes(x = .value, y = fct_rev(var_nice), fill = var_nice)) +\n  geom_vline(xintercept = 1) +\n  geom_rect(data = plot_rope, aes(xmin = xmin, xmax = xmax, ymin = -Inf, ymax = Inf),\n            fill = \"#FFDC00\", alpha = 0.3, inherit.aes = FALSE) +\n  annotate(geom = \"label\", x = 1, y = 0.65, \n           label = \"Region of practical equivalence\\n(± 0.05 × SD y)\",\n           size = pts(8)) +\n  stat_halfeye(.width = c(0.8, 0.95), alpha = 0.8, point_interval = \"median_hdi\") +\n  guides(fill = FALSE) +\n  scale_y_discrete() +\n  scale_fill_manual(values = c(\"#FF851B\", \"#85144b\", \"#3D9970\", \"#001f3f\")) +\n  labs(x = \"Percent change in ratio of contentious aid in following year\", y = NULL,\n       caption = \"Point shows posterior median; lines show 80% and 95%\\ncredible highest-density-interval\") +\n  theme_donors()\n## Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as of ggplot2\n## 3.3.4.\n## Warning: Using the `size` aesthietic with geom_segment was deprecated in ggplot2 3.4.0.\n## ℹ Please use the `linewidth` aesthetic instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-plots-dejure-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nlol what even\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nplot_ccsi_coefs <- m_purpose_outcome_ccsi %>% \n  map_dfr(~gather_draws(., b_v2xcs_ccsi), .id = \"model\") %>% \n  mutate(.value = .value / 10) %>% \n  mutate(model = comma(as.numeric(str_remove(model, \"model_\")))) %>% \n  mutate(model = fct_inorder(model)) %>% \n  left_join(coefs_nice, by = \".variable\")\n\nggplot(plot_ccsi_coefs, aes(x = .value, y = fct_rev(model), fill = model)) +\n  stat_halfeye(.width = c(0.8, 0.95), point_interval = \"median_hdi\",\n               position = position_dodge(width = 0.5)) +\n  guides(fill = FALSE) +\n  labs(x = \"Coefficient\", y = \"IPTW truncation point\") +\n  theme_donors()\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-plots-defacto-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n#### Tables\n\n\n::: {#tbl-h2-dejure .cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# model_names <- paste0(\"(\", 1:length(models_tbl_h2_outcome_dejure), \")\")\nmodel_names <- 1:length(models_tbl_h2_outcome_dejure)\nnames(models_tbl_h2_outcome_dejure) <- model_names\n\ntreatment_names <- c(\"Treatment\", \"Total barriers (t)\", \"Barriers to advocacy (t)\", \n                     \"Barriers to entry (t)\", \"Barriers to funding (t)\")\ntreatment_rows <- as.data.frame(t(treatment_names))\nattr(treatment_rows, \"position\") <- 1\n\ncoef_list_outcome <- list(\n  \"b_barriers_total\" = \"Treatment (t)\",\n  \"b_advocacy\" = \"Treatment (t)\",\n  \"b_entry\" = \"Treatment (t)\",\n  \"b_funding\" = \"Treatment (t)\",\n  \"b_v2xcs_ccsi\" = \"Core civil society index (t)\",\n  \"b_Intercept\" = \"Intercept\",\n  \"sd_gwcode__Intercept\" = \"σ country intercepts\",\n  \"sd_year__Intercept\" = \"σ year intercepts\"\n)\n\nmodelsummary(models_tbl_h2_outcome_dejure,\n             statistic = \"[{conf.low}, {conf.high}]\",\n             coef_map = coef_list_outcome,\n             add_rows = treatment_rows,\n             gof_omit = \"ELPD\",\n             escape = FALSE,\n             notes = list(\"Posterior means; 95% credible intervals in brackets\")) %>% \n  add_header_above(c(\" \" = 1, \"Outcome: Logit prop contentious (t + 1)\" = 4))\n```\n:::\n\n\nTODO: This is a mess\n\n\n::: {#tbl-h2-defacto .cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntruncation_thresholds <- names(models_tbl_h2_outcome_defacto) %>% \n  str_extract(\"_\\\\d+\") %>% \n  str_remove(\"_\") %>% \n  as.numeric() %>% \n  comma()\n\ntruncation_names <- c(\"IPTW truncation threshold\", truncation_thresholds)\ntruncation_rows <- as.data.frame(t(truncation_names))\nattr(truncation_rows, \"position\") <- 1\n\n# model_names <- paste0(\"(\", 1:length(models_tbl_h2_outcome_defacto), \")\")\nmodel_names <- 1:length(models_tbl_h2_outcome_defacto)\nnames(models_tbl_h2_outcome_defacto) <- model_names\n\nmodelsummary(models_tbl_h2_outcome_defacto,\n             statistic = \"[{conf.low}, {conf.high}]\",\n             coef_map = coef_list_outcome,\n             add_rows = truncation_rows,\n             gof_omit = \"ELPD\",\n             escape = FALSE,\n             notes = list(\"Posterior means; 95% credible intervals in brackets\")) %>% \n  add_header_above(c(\" \" = 1, \"Outcome: Outcome: Logit prop contentious (t + 1)\" = 4))\n```\n:::\n\n\n\n#### Marginal effects\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# brms::conditional_effects() can create spaghetti plots (single lines per\n# sample), but it stores them in an attribute slot named \"spaghetti\", which is\n# tricky to extract data from. This pulls the data frame from the attribute\nmake_spaghetti <- function(model) {\n  raw_effects <- conditional_effects(model, spaghetti = TRUE, nsamples = 100)[[1]]\n  spaghetti_data <- attr(raw_effects, \"spaghetti\")\n  return(spaghetti_data)\n}\n\ninv_logit <- function(f, a) {\n  a <- (1 - 2 * a)\n  (a * (1 + exp(f)) + (exp(f) - 1)) / (2 * a * (1 + exp(f)))\n}\n\nmake_spaghetti(m_purpose_outcome_total) %>% \n  mutate(estimate__ = inv_logit(estimate__, a = 0.001)) %>% \n  ggplot(aes(x = effect1__, y = estimate__, group = sample__)) +\n  geom_line(size = 0.25, color = \"#FF4136\") +\n  scale_x_continuous(breaks = 0:9) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  guides(color = FALSE) +\n  labs(x = \"Count of total legal barriers\",\n       y = \"Predicted proportion of\\ncontentious aid in following year\") +\n  theme_donors() +\n  theme(panel.grid.major.x = element_blank())\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n## ℹ Please use `linewidth` instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-conditional-effects-1.png){fig-align='center' width=85%}\n:::\n\n```{.r .cell-code}\n\nmake_spaghetti(m_purpose_outcome_advocacy) %>% \n  mutate(estimate__ = inv_logit(estimate__, a = 0.001)) %>% \n  ggplot(aes(x = effect1__, y = estimate__, group = sample__)) +\n  geom_line(size = 0.25, color = \"#FF4136\") +\n  scale_x_continuous(breaks = 0:2) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  guides(color = FALSE) +\n  labs(x = \"Count of barriers to advocacy\",\n       y = \"Predicted proportion of\\ncontentious aid in following year\") +\n  theme_donors() +\n  theme(panel.grid.major.x = element_blank())\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-conditional-effects-2.png){fig-align='center' width=85%}\n:::\n\n```{.r .cell-code}\n\nmake_spaghetti(m_purpose_outcome_entry) %>% \n  mutate(estimate__ = inv_logit(estimate__, a = 0.001)) %>% \n  ggplot(aes(x = effect1__, y = estimate__, group = sample__)) +\n  geom_line(size = 0.25, color = \"#FF4136\") +\n  scale_x_continuous(breaks = 0:3) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  guides(color = FALSE) +\n  labs(x = \"Count of barriers to entry\",\n       y = \"Predicted proportion of\\ncontentious aid in following year\") +\n  theme_donors() +\n  theme(panel.grid.major.x = element_blank())\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-conditional-effects-3.png){fig-align='center' width=85%}\n:::\n\n```{.r .cell-code}\n\nmake_spaghetti(m_purpose_outcome_funding) %>% \n  mutate(estimate__ = inv_logit(estimate__, a = 0.001)) %>% \n  ggplot(aes(x = effect1__, y = estimate__, group = sample__)) +\n  geom_line(size = 0.25, color = \"#FF4136\") +\n  scale_x_continuous(breaks = 0:5) +\n  scale_y_continuous(labels = percent_format(accuracy = 1)) +\n  guides(color = FALSE) +\n  labs(x = \"Count of barriers to funding\",\n       y = \"Predicted proportion of\\ncontentious aid in following year\") +\n  theme_donors() +\n  theme(panel.grid.major.x = element_blank())\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n\n## Warning: Argument 'nsamples' is deprecated. Please use argument 'ndraws' instead.\n```\n\n::: {.cell-output-display}\n![](models_aid-contentiousness_files/figure-html/h2-conditional-effects-4.png){fig-align='center' width=85%}\n:::\n:::\n",
    "supporting": [
      "models_aid-contentiousness_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}